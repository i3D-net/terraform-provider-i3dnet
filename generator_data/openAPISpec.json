{
    "openapi": "3.0.1",
    "info": {
        "title": "i3D.net Endpoints",
        "description": "Documentation links:\n- <a href='https://www.i3d.net/docs/one/odp/Platform-Overview/APIv3-Usage/'>API Usage</a>\n- <a href='https://www.i3d.net/docs/one/odp/Platform-Overview/APIv3-Authentication/'>API Authentication</a>\n- <a href='https://www.i3d.net/docs/one/odp/Platform-Overview/APIv3-Error-Handling/'>API Error Handling</a>\n- <a href='https://www.i3d.net/docs/one/odp/Platform-Overview/APIv3-Error-Codes/'>API Error Codes</a>\n- <a href='https://www.i3d.net/docs/one/odp/'>All ONE Deployment Platform Documentation</a>",
        "contact": {
            "name": "email",
            "email": "info@i3d.net"
        },
        "version": "3.0.0"
    },
    "servers": [
        {
            "url": "https://api.i3d.net"
        }
    ],
    "paths": {
        "/v3/telemetry/crossConnect/{crossConnectId}/usage/{uplinkId}/raw": {
            "get": {
                "tags": [
                    "CrossConnectTelemetry"
                ],
                "summary": "Get the data usage for a uplinkId in a cross connect, by default, past 24 hours",
                "operationId": "getTelemetryCrossConnectUsageRaw",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "description": "The Id of the cross connect",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "uplinkId",
                        "in": "path",
                        "description": "The Id of the uplink",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Start unix timestamp",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "End unix timestamp",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrafficUsage"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/telemetry/colocation/{colocationId}/network": {
            "get": {
                "tags": [
                    "ColocationTelemetry"
                ],
                "summary": "Gets the network telemetry for a given colocation on hourly basis (default = last 24 hours)",
                "operationId": "getTelemetryColocationNetworks",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Start unix timestamp",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "End unix timestamp",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocationNetworkTelemetry"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Error Colocation not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/telemetry/colocation/powerUsage": {
            "get": {
                "tags": [
                    "ColocationTelemetry"
                ],
                "summary": "Get the history list of power usage for all colocation",
                "operationId": "getTelemetryColocationPowerUsages",
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Unix timestamp. Filter from time, default value is -1 day",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Unix timestamp. Filter to time, default value is now",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocationPDUHistoryTelemetry"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/telemetry/colocation/powerUsage/current": {
            "get": {
                "tags": [
                    "ColocationTelemetry"
                ],
                "summary": "Get the list of all colocation current power usage",
                "operationId": "getTelemetryColocationPowerUsageCurrents",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocationPDUTelemetry"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/telemetry/colocation/{colocationId}/pdu/{pduId}": {
            "get": {
                "deprecated": true,
                "tags": [
                    "ColocationTelemetry"
                ],
                "summary": "Get the history list of power usage for a colocation and pdu",
                "description": "Use [`GET /v3/telemetry/pdu/{pduId}`](#/PduTelemetryController/getTelemetryPdu) instead",
                "operationId": "getTelemetryColocationPdu",
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Unix timestamp. Filter from time, default value is -1 day",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Unix timestamp. Filter to time, default value is now",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "colocationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pduId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocationPDUHistoryDataTelemetry"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/telemetry/colocation/overuse/current": {
            "get": {
                "tags": [
                    "ColocationTelemetry"
                ],
                "summary": "List of overuse host",
                "operationId": "getTelemetryColocationOveruseCurrents",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocationOveruseTelemetry"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/telemetry/pdu/{pduId}": {
            "get": {
                "tags": [
                    "PduTelemetry"
                ],
                "summary": "Get the history list of power usage for a pdu",
                "operationId": "getTelemetryPdu",
                "parameters": [
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Unix timestamp. Filter from time, default value is -1 day",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "Unix timestamp. Filter to time, default value is now",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "pduId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocationPDUHistoryTelemetry"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/health": {
            "get": {
                "tags": [
                    "Health"
                ],
                "summary": "Get health of the API",
                "operationId": "getHealth",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Health"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/session/user": {
            "get": {
                "tags": [
                    "Session"
                ],
                "summary": "Get basic details of the logged in user",
                "operationId": "getUser",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "If you are not logged in"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/session/login": {
            "post": {
                "tags": [
                    "Session"
                ],
                "summary": "Log in",
                "operationId": "login",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionLogin"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SessionAuthReq"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "409": {
                        "description": "Already logged in"
                    },
                    "429": {
                        "description": "Too many login requests performed"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/session/login/otp": {
            "post": {
                "tags": [
                    "Session"
                ],
                "summary": "Provide 2FA One-Time Password after a successful login (if requiresOtp is true in SessionAuthReq, as returned by /session/login)",
                "operationId": "provideOTP",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SessionLoginOtp"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Invalid OTP"
                    },
                    "404": {
                        "description": "Unexpected OTP call"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/session/logout": {
            "post": {
                "tags": [
                    "Session"
                ],
                "summary": "Log out",
                "operationId": "logout",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/utilities/servicevatpercentage/{serviceName}": {
            "get": {
                "tags": [
                    "CalcUtilities"
                ],
                "summary": "Request the VAT percentage for a shop category, for your specific user",
                "operationId": "getCalcUtilitiesServiceVatPercentage",
                "parameters": [
                    {
                        "name": "serviceName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalcServiceVatPercentage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/utilities/marginfactors/{categoryName}": {
            "get": {
                "tags": [
                    "CalcUtilities"
                ],
                "summary": "Request the user / reseller group margin factors for a calc category",
                "operationId": "getCalcUtilitiesMarginFactors",
                "parameters": [
                    {
                        "name": "categoryName",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalcCategoryMargins"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid categoryName"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/categories": {
            "get": {
                "tags": [
                    "CalcConfigurations"
                ],
                "summary": "Get all shop categories",
                "operationId": "getCalcCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CalcCategory"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/configs/{categoryName}": {
            "get": {
                "tags": [
                    "CalcConfigurations"
                ],
                "summary": "Get all configurations for the given shop category",
                "operationId": "getCalcConfig",
                "parameters": [
                    {
                        "name": "categoryName",
                        "in": "path",
                        "description": "Category name, one of /calc/categories",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CalcConfig"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "If an unknown category has been provided"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/items/{categoryName}": {
            "get": {
                "tags": [
                    "CalcConfigurations"
                ],
                "summary": "Get all groups and items of the given category",
                "operationId": "getCalcItem",
                "parameters": [
                    {
                        "name": "categoryName",
                        "in": "path",
                        "description": "Category name, one of /calc/categories",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CalcGroup"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "If an unknown category has been provided"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/locations": {
            "get": {
                "tags": [
                    "CalcConfigurations"
                ],
                "summary": "Get all the availability locations per calc category",
                "operationId": "getCalcLocations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CalcCategoryLocation"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/orders": {
            "get": {
                "tags": [
                    "CalcOrders"
                ],
                "summary": "Get all order IDs (and meta data) from your cart",
                "operationId": "getCalcOrders",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CalcOrderMeta"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CalcOrders"
                ],
                "summary": "Create an order from a config (tag)",
                "operationId": "createCalcOrder",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalcOrderCreate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalcOrder"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/orders/quote": {
            "post": {
                "tags": [
                    "CalcOrders"
                ],
                "summary": "Submit a quote request for your current cart",
                "operationId": "createCalcOrdersQuote",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalcOrderQuote"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "If your cart is completely empty"
                    },
                    "422": {
                        "description": "If you have an error in the submitted values"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/orders/{orderId}": {
            "get": {
                "tags": [
                    "CalcOrders"
                ],
                "summary": "Get an order from the cart",
                "operationId": "getCalcOrder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalcOrder"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "If the order was not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CalcOrders"
                ],
                "summary": "Update an order",
                "operationId": "updateCalcOrder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Order quantity and items. Item groups must match those listed in the original configuration.",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CalcOrderUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CalcOrder"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "If the order was not found"
                    },
                    "422": {
                        "description": "If you have an error in the submitted order values"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CalcOrders"
                ],
                "summary": "Delete an order from the cart",
                "operationId": "deleteCalcOrder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "If the order was not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/calc/orders/finalize/{orderId}": {
            "put": {
                "tags": [
                    "CalcOrders"
                ],
                "summary": "Set an order in the cart to 'checkout' (which means it will show up on the checkout page). Updating the order is still allowed after finalization",
                "operationId": "finalizeCalcOrder",
                "parameters": [
                    {
                        "name": "orderId",
                        "in": "path",
                        "description": "Order ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "If the order was not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/jobs": {
            "get": {
                "tags": [
                    "Job"
                ],
                "summary": "Get all jobs",
                "operationId": "getJobs",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/jobs/{jobId}": {
            "get": {
                "tags": [
                    "Job"
                ],
                "summary": "Get the details of a job",
                "operationId": "getJob",
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "The Id of the jobs you are requesting",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Job"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid jobId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/jobs/{jobId}/solicit": {
            "post": {
                "tags": [
                    "Job"
                ],
                "summary": "Solicit for a job",
                "operationId": "createJobSolicit",
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "The Id of the jobs you are soliciting for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Invalid jobId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/jobs/{jobId}/solicit/{solicitId}/files": {
            "post": {
                "tags": [
                    "Job"
                ],
                "summary": "Add files to the solicitation",
                "operationId": "uploadJobSolicitFiles",
                "parameters": [
                    {
                        "name": "jobId",
                        "in": "path",
                        "description": "The Id of the jobs you are soliciting for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "solicitId",
                        "in": "path",
                        "description": "The Id of the solicitation you are uploading files for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid jobId or solicitId"
                    },
                    "413": {
                        "description": "Request Entity Too Large"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/newsletter/optin": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Sign up for the newsletter. This will send a confirmation email with a validation url to follow.",
                "operationId": "optInForNewsletter",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewsletterOptIn"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/newsletter/confirm": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Newsletter sign up confirmation, with the token from the confirmation email.",
                "operationId": "confirmNewsletterOptIn",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewsletterConfirm"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Error"
                    }
                }
            }
        },
        "/v3/newsletter/unsubscribe": {
            "post": {
                "tags": [
                    "Newsletter"
                ],
                "summary": "Unsubscribe from the newsletter, using the unsubscribe url in a newsletter.",
                "operationId": "unsubscribeFromNewsletter",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/NewsletterUnsubscribe"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/quote": {
            "post": {
                "tags": [
                    "Quotes"
                ],
                "summary": "Request a colocation quote",
                "operationId": "createColocationQuote",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/QuoteColocation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/categories": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get a list of all ticket categories",
                "operationId": "getTicketsCategories",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get a list of all ticket meta data (no actual contents)",
                "operationId": "getTickets",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ticket"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Create a new ticket",
                "operationId": "createTicket",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketNew"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/openOrUnread": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get a list of all ticket meta data (no actual contents) that are open or unread",
                "operationId": "getTicketsOpenOrUnreads",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Ticket"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/{ticketId}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get a specific ticket with all replies.",
                "operationId": "getTicket",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/{ticketId}/attachment/{attachmentId}": {
            "get": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Get a ticket attachment",
                "operationId": "getTicketAttachment",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "Attachment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": ""
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/contact": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Create a new ticket without being logged in (public contact form)",
                "operationId": "contact",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketNewContact"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/{ticketId}/reply": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Post a reply to an existing ticket",
                "operationId": "createTicketReply",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketNewReply"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ticket"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/attachment": {
            "post": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Upload an attachment to the system",
                "operationId": "createTicketsAttachment",
                "consumes": [
                    "multipart/form-data"
                ],
                "requestBody": {
                    "description": "Upload any attachments you want to attach to a ticket reply using this endpoint. The resulting\n`attachmentId`(s) can then be sent along with your ticket reply to couple the attachment to the reply.\nAlso see [POST /v3/tickets/{ticketId}/reply](all#/Tickets/createTicketReply)",
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TicketNewAttachment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TicketUploadedAttachment"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/attachment/{attachmentId}": {
            "delete": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Delete an attachment *that is not coupled to a ticket or reply yet*",
                "operationId": "deleteTicketsAttachment",
                "parameters": [
                    {
                        "name": "attachmentId",
                        "in": "path",
                        "description": "Attachment ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "When the attachment was not found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/{ticketId}/open": {
            "put": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Open a ticket (if it isn't force-closed)",
                "operationId": "openTicket",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/tickets/{ticketId}/close": {
            "put": {
                "tags": [
                    "Tickets"
                ],
                "summary": "Close a ticket",
                "operationId": "closeTicket",
                "parameters": [
                    {
                        "name": "ticketId",
                        "in": "path",
                        "description": "Ticket ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/dedicatedServer": {
            "get": {
                "tags": [
                    "DedicatedServer"
                ],
                "summary": "Get all your dedicated servers (can be bare metal servers or VMs) and their main details",
                "operationId": "getDedicatedServers",
                "parameters": [
                    {
                        "name": "labels",
                        "in": "query",
                        "description": "Label expressions can be used to apply more specific search parameters and can be written in standard SQL query language.<br />\nE.g. `region_id=123` or multiple filters: `region_id=123 and fleet_id=456 or host_id=46256` The provided filter query needs to be url encoded. E.g.<br />\n`region_id%3D123` or multiple filters: `region_id%3D123%20and%20fleet_id%3D456%20or%20host_id%3D46256` The total would look like:<br />\n`/dedicatedServer?labels=region_id%3D123%20and%20fleet_id%3D456%20or%20host_id%3D46256`<br />\nIf you want to filter on a non-numeric label such as `region_name`, you have to wrap the value in double quotes: `region_name='Rotterdam'`<br />\nWarning: the `labels` query parameter is ignored when passing a `PAGE-TOKEN` and the original `labels` string will be used for that request instead.<br />\nFor more information about labels check <a href='https://www.i3d.net/docs/one/odp/Platform-Elements/Application/Label/#pre-defined-labels'>details</a>",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Host"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/dedicatedServer/summary": {
            "get": {
                "tags": [
                    "DedicatedServer"
                ],
                "summary": "Get all your dedicated servers (can be bare metal servers or VMs) and their main details",
                "operationId": "getDedicatedServerSummaries",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Fields return in response, only fields available in model can be filter out",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/HostSummary"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/dedicatedServer/{dedicatedServerId}": {
            "get": {
                "tags": [
                    "DedicatedServer"
                ],
                "summary": "Get a dedicated server (can be bare metal servers or VMs) and their main details",
                "operationId": "getDedicatedServer",
                "parameters": [
                    {
                        "name": "dedicatedServerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Host"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "DedicatedServer"
                ],
                "summary": "Can add, edit or delete dedicated server labels. To delete label need to provide key with null value.",
                "operationId": "updateDedicatedServer",
                "parameters": [
                    {
                        "name": "dedicatedServerId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Host"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Host"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get list of all colocated servers",
                "operationId": "getColocations",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedServer"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get the colocated server by ID",
                "operationId": "getColocation",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedServer"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocationId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Update the colocated server by ID",
                "operationId": "updateColocation",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ColocatedServer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedServer"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocationId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/invoice": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get all the invoices for a specific colocated service",
                "operationId": "getColocationInvoices",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated service to fetch invoices for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invoice"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/pdu": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get all the PDUs for a specific colocated service",
                "operationId": "getColocationPdus",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated service to fetch PDUs for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Pdu"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/network/usage/{upLinkId}/raw": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get the traffic usage data for the last day",
                "operationId": "getColocationNetworkUsageRaw",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "startTime",
                        "in": "query",
                        "description": "Start unix timestamp",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "endTime",
                        "in": "query",
                        "description": "End unix timestamp",
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TrafficUsage"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/network/usage/{upLinkId}/graph/year": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get the traffic usage graph (last year)",
                "operationId": "getColocationNetworkUsageGraphYears",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded image string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/network/usage/{upLinkId}/graph/month": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get the traffic usage graph (last 30 days)",
                "operationId": "getColocationNetworkUsageGraphMonths",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded image string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/network/usage/{upLinkId}/graph/week": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get the traffic usage graph (last 7 days)",
                "operationId": "getColocationNetworkUsageGraphWeeks",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded image string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/network/usage/{upLinkId}/graph/day": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get the traffic usage graph (last 24 hours)",
                "operationId": "getColocationNetworkUsageGraphDays",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded image string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/alert": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get all the alerts linked to the colocated server",
                "operationId": "getColocationAlerts",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server to get the alerts for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedAlert"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Create alert for the colocated server",
                "operationId": "createColocationAlert",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server to create an alert for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ColocatedAlert"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedAlert"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/alert/{colocationAlertId}": {
            "put": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Update colocated server alert",
                "operationId": "updateColocationAlert",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server that the alert belongs to",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "colocationAlertId",
                        "in": "path",
                        "description": "ID of the host alert to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ColocatedAlert"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedAlert"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation ID or alert ID"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Delete colocated server alert",
                "operationId": "deleteColocationAlert",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server that the alert belongs to",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "colocationAlertId",
                        "in": "path",
                        "description": "ID of the alert to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocated server ID or alert ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/cancel": {
            "put": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Cancel the colocated server",
                "operationId": "updateColocationCancel",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocated server that the cancellation should applied to",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocated server ID"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/cancel/revert": {
            "put": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Revert the cancellation of a colocated server",
                "operationId": "updateColocationCancelRevert",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the cancelled colocated server that should be reverted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocated server ID"
                    },
                    "422": {
                        "description": "Unable to revert cancellation of colocated server"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect": {
            "get": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Get the list of all cross connect",
                "operationId": "getCrossConnects",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CrossConnect"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect/{crossConnectId}": {
            "get": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Get the list of all cross connect",
                "operationId": "getCrossConnect",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "description": "The ID of the cross connect",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CrossConnect"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid cross connect ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Update the cross connect by ID",
                "operationId": "updateCrossConnect",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CrossConnect"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CrossConnect"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid crossConnectId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect/{crossConnectId}/invoice": {
            "get": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Get all the invoices for a specific cross connect",
                "operationId": "getCrossConnectInvoices",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "description": "The ID of the cross connect",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CrossConnect"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid cross connect ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect/{crossConnectId}/cancel": {
            "put": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "cancel the cross connect by ID",
                "operationId": "updateCrossConnectCancel",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CrossConnect"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid crossConnectId"
                    },
                    "422": {
                        "description": "unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect/{crossConnectId}/cancel/revert": {
            "put": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Revert the cancellation of a cross connect by ID",
                "operationId": "updateCrossConnectCancelRevert",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CrossConnect"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CrossConnect"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid crossConnectId"
                    },
                    "422": {
                        "description": "unprocessable entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect/{crossConnectId}/network/usage/{upLinkId}/graph/year": {
            "get": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Get the traffic usage graph (last year)",
                "operationId": "getCrossConnectNetworkUsageGraphYears",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "description": "ID of the cross connect to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded image string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid cross connect ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect/{crossConnectId}/network/usage/{upLinkId}/graph/month": {
            "get": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Get the traffic usage graph (last 30 days)",
                "operationId": "getCrossConnectNetworkUsageGraphMonths",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "description": "ID of the cross connect to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded image string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid cross connect ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect/{crossConnectId}/network/usage/{upLinkId}/graph/week": {
            "get": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Get the traffic usage graph (last 7 days)",
                "operationId": "getCrossConnectNetworkUsageGraphWeeks",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "description": "ID of the cross connect to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded image string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid cross connect ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/crossConnect/{crossConnectId}/network/usage/{upLinkId}/graph/day": {
            "get": {
                "tags": [
                    "CrossConnect"
                ],
                "summary": "Get the traffic usage graph (last 24 hours)",
                "operationId": "getCrossConnectNetworkUsageGraphDays",
                "parameters": [
                    {
                        "name": "crossConnectId",
                        "in": "path",
                        "description": "ID of the cross connect to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "upLinkId",
                        "in": "path",
                        "description": "ID of the uplink to fetch traffic for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Base64 encoded image string",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "string",
                                        "format": ""
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid cross connect ID or uplink ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/{colocationId}/network/rdns/{ipAddress}": {
            "put": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Set RDNS hostname for IP",
                "operationId": "updateColocationNetworkRdn",
                "parameters": [
                    {
                        "name": "colocationId",
                        "in": "path",
                        "description": "ID of the colocation-service to which IP address belongs to",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ipAddress",
                        "in": "path",
                        "description": "IP address to set RDNS entry for",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RDns"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid colocation-service ID or IP address"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/server/{serverId}/pxe/switchportratelimit": {
            "put": {
                "tags": [
                    "PxeServer"
                ],
                "summary": "Switch server port rate limit",
                "operationId": "updateServerPxeSwitchportratelimit",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "ID of the server",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwitchPortRateLimit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/server/{serverId}/pxe/switchportspeed": {
            "put": {
                "tags": [
                    "PxeServer"
                ],
                "summary": "Switch server port speed",
                "operationId": "updateServerPxeSwitchportspeed",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "ID of the server",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwitchPortSpeed"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/server/{serverId}/pxe/switchportadminstate": {
            "put": {
                "tags": [
                    "PxeServer"
                ],
                "summary": "Switch server port admin state",
                "operationId": "updateServerPxeSwitchportadminstate",
                "parameters": [
                    {
                        "name": "serverId",
                        "in": "path",
                        "description": "ID of the server",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SwitchPortAdminState"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/operatingsystem": {
            "get": {
                "tags": [
                    "OperatingSystem"
                ],
                "summary": "Get all the available operating systems",
                "operationId": "getOperatingsystems",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OperatingSystem"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/slackSetting": {
            "get": {
                "tags": [
                    "SlackSetting"
                ],
                "summary": "Get the list of all your slack settings",
                "operationId": "getSlackSettings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackSetting"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SlackSetting"
                ],
                "summary": "Create a slack setting",
                "operationId": "createSlackSetting",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackSetting"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackSetting"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/slackSetting/{slackSettingId}": {
            "get": {
                "tags": [
                    "SlackSetting"
                ],
                "summary": "Get a single slack setting",
                "operationId": "getSlackSetting",
                "parameters": [
                    {
                        "name": "slackSettingId",
                        "in": "path",
                        "description": "The Id of the slack setting",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackSetting"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid slackSettingId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "SlackSetting"
                ],
                "summary": "Update a slack setting",
                "operationId": "updateSlackSetting",
                "parameters": [
                    {
                        "name": "slackSettingId",
                        "in": "path",
                        "description": "The Id of the slack setting",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SlackSetting"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SlackSetting"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid slackSettingId"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "SlackSetting"
                ],
                "summary": "Remove a slack setting",
                "operationId": "deleteSlackSetting",
                "parameters": [
                    {
                        "name": "slackSettingId",
                        "in": "path",
                        "description": "The Id of the slack setting",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid slackSettingId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/invoice": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get details of all invoices of a user",
                "operationId": "getAccountInvoices",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The filter to search for the description<br />\nThe filter parameter can be used to apply a more specific search, the only element that can be filtered is 'description'.<br />\nThe filter will be done on a part of the provided description (it should contain the searched element).<br />\nE.g. we need to filter for a string 'this is an example'<br />\nRemember to urlencode the provided filter<br />\nThe final call would look like:<br />\n/billing/invoice?filter=this%20is%20an%20example",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invoice"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/invoice/unpaid": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get details of all unpaid invoices for a user (excluding credit invoices)",
                "operationId": "getAccountInvoiceUnpaids",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "The filter to search for the description<br />\nThe filter parameter can be used to apply a more specific search, the only element that can be filtered is 'description'.<br />\nThe filter will be done on a part of the provided description (it should contain the searched element).<br />\nE.g. we need to filter for a string 'this is an example'<br />\nRemember to urlencode the provided filter<br />\nThe final call would look like:<br />\n/billing/invoice?filter=this%20is%20an%20example",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Invoice"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/invoice/{invoiceId}": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get invoice details by invoice ID",
                "operationId": "getAccountInvoice",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of the invoice to fetch details about",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InvoiceDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid invoice ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/invoice/number/{invoiceNumber}": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get invoice details by invoice number",
                "operationId": "getAccountInvoiceNumber",
                "parameters": [
                    {
                        "name": "invoiceNumber",
                        "in": "path",
                        "description": "Number of the invoice to fetch details about",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InvoiceDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid invoice number"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/invoice/{invoiceId}/pdf": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get invoice as PDF",
                "operationId": "getAccountInvoicePdfs",
                "parameters": [
                    {
                        "name": "invoiceId",
                        "in": "path",
                        "description": "ID of the invoice to fetch details about",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid invoice ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/invoice/pay/prepare": {
            "get": {
                "tags": [
                    "Pay"
                ],
                "summary": "Get prepared data for the front-end to begin the pay process of invoice(s)",
                "operationId": "getAccountInvoicePayPrepares",
                "parameters": [
                    {
                        "name": "invoiceIds",
                        "in": "query",
                        "description": "The invoiceId(s) to prepare pay data for separated by comma (,)<br />\nRemember to urlencode the provided invoiceIds<br />\nThe invoiceIds call would look like:<br />\n/v3/account/invoice/pay/prepare?invoiceIds=111111%2C22222%2C33333%2C44444",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PayPrepare"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/invoice/pay/register": {
            "post": {
                "tags": [
                    "Pay"
                ],
                "summary": "post invoice(s) data to register the transaction with the selected payment provider",
                "operationId": "createAccountInvoicePayRegister",
                "requestBody": {
                    "description": "EXAMPLE of the value of invoiceIds property '111111,22222,33333,44444'",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PayRegister"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PayRegisterResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/invoice/pay/paymentLanding": {
            "get": {
                "tags": [
                    "Pay"
                ],
                "summary": "Get invoice plus extra information to show on landing page after payment",
                "operationId": "getAccountInvoicePayPaymentLandings",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaymentLandingResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/pingsite": {
            "get": {
                "tags": [
                    "PingSite"
                ],
                "summary": "Get all available ping site",
                "operationId": "getPingSiteAction",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PingSite"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/pingsite/detail": {
            "get": {
                "tags": [
                    "PingSite"
                ],
                "summary": "Get all available ping site its detail beacon information",
                "operationId": "getPingSiteDetailAction",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PingSiteDetail"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/pingsite/latency": {
            "get": {
                "tags": [
                    "PingSite"
                ],
                "summary": "Get all available ping site latency",
                "operationId": "getPingSiteLatencyAction",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/PingSiteLatencyModel"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/callback": {
            "get": {
                "tags": [
                    "CallbackSetting"
                ],
                "summary": "Get all available callback endpoints",
                "operationId": "getCallbacks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallbackSetting"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "CallbackSetting"
                ],
                "summary": "Create a callback",
                "operationId": "createCallback",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallbackSetting"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallbackSetting"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/callback/{callbackSettingId}": {
            "get": {
                "tags": [
                    "CallbackSetting"
                ],
                "summary": "Get a callback for a given callbackSettingId",
                "operationId": "getCallback",
                "parameters": [
                    {
                        "name": "callbackSettingId",
                        "in": "path",
                        "description": "The Id of the callback setting",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallbackSetting"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid callbackSettingId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "CallbackSetting"
                ],
                "summary": "Update given callback",
                "operationId": "updateCallback",
                "parameters": [
                    {
                        "name": "callbackSettingId",
                        "in": "path",
                        "description": "The Id of the callback setting",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CallbackSetting"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CallbackSetting"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid callbackSettingId"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "CallbackSetting"
                ],
                "summary": "Delete given callback",
                "operationId": "deleteCallback",
                "parameters": [
                    {
                        "name": "callbackSettingId",
                        "in": "path",
                        "description": "The Id of the callback setting",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid callbackSettingId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/apiLog": {
            "get": {
                "tags": [
                    "APILog"
                ],
                "summary": "Get logs of all API v3 request",
                "operationId": "getAccountApiLogs",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header: RANGED-DATA:start=0,results=25",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/APILog"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/apiLog/{requestType}": {
            "get": {
                "tags": [
                    "APILog"
                ],
                "summary": "Get logs of all API v3 request for the given requestType",
                "operationId": "getAccountApiLog",
                "parameters": [
                    {
                        "name": "requestType",
                        "in": "path",
                        "description": "The Http method that was used in the call. Possible values are {GET, POST, PUT and DELETE}",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header: RANGED-DATA:start=0,results=25",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/APILog"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid requestType"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/country": {
            "get": {
                "tags": [
                    "Country"
                ],
                "summary": "Get list of all countries",
                "operationId": "getCountries",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Country"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/signUp": {
            "post": {
                "tags": [
                    "AccountSignUp"
                ],
                "summary": "Sign up a new account",
                "operationId": "signUp",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountSignUp"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/InitialAccount"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Account already exists"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/password": {
            "put": {
                "tags": [
                    "Password"
                ],
                "summary": "Change the password",
                "operationId": "changeAccountPassword",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordChange"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "401": {
                        "description": "Invalid credentials"
                    },
                    "429": {
                        "description": "Too many login requests performed"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/password/reset": {
            "post": {
                "tags": [
                    "Password"
                ],
                "summary": "Reset the password",
                "operationId": "resetAccountPassword",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordReset"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "422": {
                        "description": "User is already logged in"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/password/reset/validate": {
            "put": {
                "tags": [
                    "Password"
                ],
                "summary": "Validate the reset password",
                "operationId": "validateAccountPasswordReset",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetValidate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "User is already logged in"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/email/confirm": {
            "put": {
                "tags": [
                    "EmailConfirmation"
                ],
                "summary": "Confirm email",
                "operationId": "confirmEmail",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailConfirmation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailConfirmationResult"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid confirmation details"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/email/confirm/resend": {
            "post": {
                "tags": [
                    "EmailConfirmation"
                ],
                "summary": "Resend email confirmation",
                "operationId": "resendEmailConfirmation",
                "requestBody": {
                    "description": "to resend the confirmation to",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailConfirmationResend"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid email"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/email/confirm/resend/oauth": {
            "post": {
                "tags": [
                    "EmailConfirmation"
                ],
                "summary": "Resend email confirmation",
                "operationId": "resendOAuthEmailConfirmation",
                "requestBody": {
                    "description": "to resend the confirmation to",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailConfirmationResend"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid email"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/details": {
            "get": {
                "tags": [
                    "AccountDetails"
                ],
                "summary": "Get account details",
                "operationId": "getAccountDetails",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AccountDetails"
                ],
                "summary": "Update account details",
                "operationId": "updateAccountDetails",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountDetails"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "409": {
                        "description": "Conflict"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/email/change": {
            "put": {
                "tags": [
                    "AccountDetails"
                ],
                "summary": "Update the primary email address",
                "operationId": "updateEmailAction",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailChange"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/billing": {
            "get": {
                "tags": [
                    "AccountBilling"
                ],
                "summary": "Fetch account billing details",
                "operationId": "getAccountBillingDetails",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountBillingDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "AccountBilling"
                ],
                "summary": "Update account billing details",
                "operationId": "updateAccountBillingDetails",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountBillingDetails"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountBillingDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/log": {
            "get": {
                "tags": [
                    "AccountActionLog"
                ],
                "summary": "Get a list of account action log",
                "operationId": "getAccountLogs",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountActionLog"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/apiKey": {
            "get": {
                "tags": [
                    "AccountAPIKey"
                ],
                "summary": "List all API keys",
                "operationId": "getAccountApiKeys",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountApiKey"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AccountAPIKey"
                ],
                "summary": "Generate API key",
                "operationId": "createApiKeyForUser",
                "requestBody": {
                    "description": "key",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountApiKey"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountApiKey"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/apiKey/{apiKeyId}": {
            "put": {
                "tags": [
                    "AccountAPIKey"
                ],
                "summary": "Update API key",
                "operationId": "updateAccountApiKey",
                "parameters": [
                    {
                        "name": "apiKeyId",
                        "in": "path",
                        "description": "ID of API key to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "key",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountApiKey"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountApiKey"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AccountAPIKey"
                ],
                "summary": "Delete API key",
                "operationId": "deleteAccountApiKey",
                "parameters": [
                    {
                        "name": "apiKeyId",
                        "in": "path",
                        "description": "ID of API key to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid apiKeyId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/apiKey/{apiKeyId}/whitelist": {
            "get": {
                "tags": [
                    "APIKeyIPWhitelist"
                ],
                "summary": "Get all whitelist IP ranges",
                "operationId": "getAccountApiKeyWhitelists",
                "parameters": [
                    {
                        "name": "apiKeyId",
                        "in": "path",
                        "description": "ID of API key",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountAPIKeyIPWhitelist"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid API key ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "APIKeyIPWhitelist"
                ],
                "summary": "Add IP range to the whitelist",
                "operationId": "createAccountApiKeyWhitelist",
                "parameters": [
                    {
                        "name": "apiKeyId",
                        "in": "path",
                        "description": "ID of API key",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAPIKeyIPWhitelist"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountAPIKeyIPWhitelist"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid API key ID"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/apiKey/{apiKeyId}/whitelist/{apiKeyWhitelistId}": {
            "put": {
                "tags": [
                    "APIKeyIPWhitelist"
                ],
                "summary": "Update whitelisted IP range",
                "operationId": "updateAccountApiKeyWhitelist",
                "parameters": [
                    {
                        "name": "apiKeyId",
                        "in": "path",
                        "description": "ID of API key",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "apiKeyWhitelistId",
                        "in": "path",
                        "description": "Whitelisted IP range ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountAPIKeyIPWhitelist"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountAPIKeyIPWhitelist"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid API key whitelist ID"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "APIKeyIPWhitelist"
                ],
                "summary": "Delete whitelisted IP range",
                "operationId": "deleteAccountApiKeyWhitelist",
                "parameters": [
                    {
                        "name": "apiKeyId",
                        "in": "path",
                        "description": "ID of API key",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "apiKeyWhitelistId",
                        "in": "path",
                        "description": "Whitelisted IP range ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid API key whitelist ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/whitelist": {
            "get": {
                "tags": [
                    "AccountIPWhitelist"
                ],
                "summary": "Get all whitelist IP ranges",
                "operationId": "getAccountWhitelists",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountIPWhitelist"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AccountIPWhitelist"
                ],
                "summary": "Add IP range to the whitelist",
                "operationId": "createAccountWhitelist",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountIPWhitelist"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountIPWhitelist"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/whitelist/{whitelistId}": {
            "put": {
                "tags": [
                    "AccountIPWhitelist"
                ],
                "summary": "Update whitelisted IP range",
                "operationId": "updateAccountWhitelist",
                "parameters": [
                    {
                        "name": "whitelistId",
                        "in": "path",
                        "description": "Whitelisted IP range ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountIPWhitelist"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountIPWhitelist"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid IP whitelist ID"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "AccountIPWhitelist"
                ],
                "summary": "Delete whitelisted IP range",
                "operationId": "deleteAccountWhitelist",
                "parameters": [
                    {
                        "name": "whitelistId",
                        "in": "path",
                        "description": "Whitelisted IP range ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid IP whitelist ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/files": {
            "get": {
                "tags": [
                    "AccountFiles"
                ],
                "summary": "List all files",
                "operationId": "getAccountFiles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountFile"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/files/{fileId}/download": {
            "get": {
                "tags": [
                    "AccountFiles"
                ],
                "summary": "Download the file",
                "operationId": "downloadAccountFile",
                "parameters": [
                    {
                        "name": "fileId",
                        "in": "path",
                        "description": "ID of the file to download",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "fileContent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string",
                                    "format": ""
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid file ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/document": {
            "get": {
                "tags": [
                    "AccountDocument"
                ],
                "summary": "Get all the documents",
                "operationId": "getAccountDocuments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountDocument"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "AccountDocument"
                ],
                "summary": "Create a new document",
                "operationId": "createAccountDocument",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccountDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccountDocument"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/account/document/{documentId}": {
            "delete": {
                "tags": [
                    "AccountDocument"
                ],
                "summary": "Delete a document.",
                "operationId": "deleteAccountDocument",
                "parameters": [
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "Id of the document to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid document id"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/access": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get list of all colocation access",
                "operationId": "getColocationAccesses",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Example /v3/colocation/access?status=revoked",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedAccessDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Create a new colocation access request",
                "operationId": "createColocationAccess",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ColocatedAccess"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedAccessDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/access/{accessId}": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get colocation access by ID",
                "operationId": "getColocationAccess",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedAccessDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid accessId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Update colocation access",
                "operationId": "updateColocationAccess",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ColocatedAccess"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ColocatedAccessDetails"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Invalid accessId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Delete colocation access by ID",
                "operationId": "deleteColocationAccess",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "The ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid accessId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/access/{accessId}/revoke": {
            "put": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Revoke access by access ID",
                "operationId": "updateColocationAccessRevoke",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "The ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid accessId"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/access/{accessId}/document": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get all the documents of the DC access visitor",
                "operationId": "getColocationAccessDocuments",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "The ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessDocument"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Create a new document for the visitor accessing DC",
                "operationId": "createColocationAccessDocument",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "The ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessDocument"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/colocation/access/{accessId}/document/{documentId}": {
            "get": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Get a document of the DC access visitor",
                "operationId": "getColocationAccessDocument",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "The ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document to view",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessDocument"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid document id"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Update document of the DC access visitor",
                "operationId": "updateColocationAccessDocument",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "The ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AccessDocument"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/AccessDocument"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid API key access ID"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Colocation"
                ],
                "summary": "Delete a document of the visitor accessing DC",
                "operationId": "deleteColocationAccessDocument",
                "parameters": [
                    {
                        "name": "accessId",
                        "in": "path",
                        "description": "The ID of the access",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "documentId",
                        "in": "path",
                        "description": "The ID of the document to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid document id"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/dashboard/service": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "List all services",
                "operationId": "getDashboardServices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Service"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/dashboard/status": {
            "get": {
                "tags": [
                    "Dashboard"
                ],
                "summary": "Get the status of the platform",
                "operationId": "getDashboardStatuses",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/OnlineStatus"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/{triggerId}": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get the detail of the trigger",
                "operationId": "getTriggerById",
                "parameters": [
                    {
                        "name": "triggerId",
                        "in": "path",
                        "description": "The ID of the trigger for which to fetch the information",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trigger"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Update the details of a trigger",
                "operationId": "updateTrigger",
                "parameters": [
                    {
                        "name": "triggerId",
                        "in": "path",
                        "description": "The ID of the trigger",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trigger"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trigger"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Delete a trigger",
                "operationId": "removeTrigger",
                "parameters": [
                    {
                        "name": "triggerId",
                        "in": "path",
                        "description": "The ID of the trigger",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get the list of all the triggers",
                "operationId": "getTriggerList",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trigger"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/summary": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get the summary of all the triggers, only id, name and description",
                "operationId": "getTriggerSummary",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TriggerSummary"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger": {
            "post": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Create a trigger",
                "operationId": "createTrigger",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Trigger"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trigger"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/{triggerId}/enable": {
            "put": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Enable a trigger",
                "operationId": "enableTrigger",
                "parameters": [
                    {
                        "name": "triggerId",
                        "in": "path",
                        "description": "The ID of the trigger",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trigger"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/{triggerId}/disable": {
            "put": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Disable a trigger",
                "operationId": "disableTrigger",
                "parameters": [
                    {
                        "name": "triggerId",
                        "in": "path",
                        "description": "The ID of the trigger",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Trigger"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Invalid ID"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/type/ruleActions": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get list of rule action types",
                "operationId": "getTriggerTypeRuleActions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TriggerType"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/type/ruleDataTypes": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get list of rule data types",
                "operationId": "getTriggerTypeRuleDataTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TriggerType"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/type/actions": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get list of actions types",
                "operationId": "getTriggerTypeActions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TriggerType"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/type/operators": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get list of operators",
                "operationId": "getTriggerTypeOperators",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TriggerType"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/type/conditions": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get list of conditions",
                "operationId": "getTriggerTypeConditions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TriggerType"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/trigger/type/valueTypes": {
            "get": {
                "tags": [
                    "Trigger"
                ],
                "summary": "Get list of valueTypes",
                "operationId": "getTriggerTypeValueTypes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TriggerType"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/sshKey": {
            "get": {
                "tags": [
                    "SSHKey"
                ],
                "summary": "List SSH keys",
                "operationId": "getSshKeys",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SshKey"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "SSHKey"
                ],
                "summary": "Upload a new SSH key",
                "description": "Note: Please always upload a public(!) key and preferably in OpenSSH format.",
                "operationId": "createSshKey",
                "requestBody": {
                    "description": "",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SshKey"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/SshKey"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/sshKey/{uuid}": {
            "delete": {
                "tags": [
                    "SSHKey"
                ],
                "summary": "Delete SSH key",
                "operationId": "deleteSshKey",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "SSH key UUID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "7561c39d-f4df-4c46-b3f1-2ac981271e29"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid UUID"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "SSH key not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/internalServices/heatmapData": {
            "get": {
                "tags": [
                    "InternalService"
                ],
                "summary": "Get users geo heatmap data",
                "operationId": "getInternalServicesHeatmapDatas",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/CDNUserFeaturesModel"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/currency": {
            "get": {
                "tags": [
                    "Currency"
                ],
                "summary": "Get the list of all currenties",
                "operationId": "getCurrencies",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Currency"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/servers": {
            "get": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Get all your FlexMetal servers",
                "operationId": "getFlexMetalServers",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by status [creating, provisioning, delivered, failed, releasing, released]",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "in": "query",
                        "description": "Filter by one or more server tags (only servers with all tags will be returned)",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": ""
                        }
                    },
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalServer"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Create a new FlexMetal server",
                "operationId": "createFlexMetalServer",
                "requestBody": {
                    "description": "Server request model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FlexMetalServerRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FlexMetalServer"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request body"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/servers/{uuid}": {
            "get": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Get a specific FlexMetal server",
                "operationId": "getFlexMetalServer",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The server identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalServer"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Release a FlexMetal server",
                "operationId": "deleteFlexMetalServer",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The server identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalServer"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/servers/{uuid}/rootPassword": {
            "get": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Get a FlexMetal server's root password",
                "description": "Windows only: Fetch the root password within the first 24 hours after installation.",
                "operationId": "getFlexMetalServerRootPasswords",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The server identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalServerRootPassword"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/servers/{uuid}/tag/{tag}": {
            "post": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Add a tag to a FlexMetal server",
                "operationId": "createFlexMetalServerTag",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The server identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "The tag to add to the server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalServer"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Remove a tag from a FlexMetal server",
                "operationId": "deleteFlexMetalServerTag",
                "parameters": [
                    {
                        "name": "uuid",
                        "in": "path",
                        "description": "The server identifier",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "tag",
                        "in": "path",
                        "description": "The tag to remove from the server",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalServer"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/capacity/commit": {
            "get": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Get your FlexMetal capacity commits and usage",
                "operationId": "getFlexMetalCapacityCommits",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalCapacityCommit"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/tags": {
            "get": {
                "tags": [
                    "FlexMetalTags"
                ],
                "summary": "Get all your FlexMetal tags",
                "operationId": "getFlexMetalTags",
                "parameters": [
                    {
                        "name": "RANGED-DATA",
                        "in": "header",
                        "description": "Example header and default range: RANGED-DATA:start=0,results=25",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tags",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalTag"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/tags/{tag}": {
            "delete": {
                "tags": [
                    "FlexMetalTags"
                ],
                "summary": "Delete a FlexMetal tag",
                "operationId": "deleteFlexMetalTag",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "patch": {
                "tags": [
                    "FlexMetalTags"
                ],
                "summary": "Rename a FlexMetal tag",
                "operationId": "updateFlexMetalTag",
                "requestBody": {
                    "description": "Tag rename request model",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FlexMetalTagRenameRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "The updated tag name",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalTagRenameResponse"
                                    }
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Invalid credentials"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "422": {
                        "description": "Unprocessable content"
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/location": {
            "get": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Get all available Bare Metal locations",
                "operationId": "getFlexMetalLocations",
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalLocation"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/v3/flexMetal/location/{locationId}/instanceTypes": {
            "get": {
                "tags": [
                    "FlexMetalServer"
                ],
                "summary": "Get all instance types for a location.",
                "description": "For an overview of all locations, see /v3/flexMetal/location",
                "operationId": "getFlexMetalLocationInstanceTypes",
                "parameters": [
                    {
                        "name": "locationId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/FlexMetalInstanceType"
                                    }
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "APILog": {
                "type": "object",
                "required": [
                    "request",
                    "response"
                ],
                "properties": {
                    "request": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/APIRequest"
                            }
                        ],
                        "description": "HTTP request object",
                        "readOnly": true
                    },
                    "response": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/APIResponse"
                            }
                        ],
                        "description": "HTTP response object",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "APIRequest": {
                "type": "object",
                "required": [
                    "url",
                    "method",
                    "header",
                    "queryParameter",
                    "ipAddress",
                    "requestTimestamp",
                    "body"
                ],
                "properties": {
                    "url": {
                        "type": "string",
                        "format": "",
                        "description": "Url of the request",
                        "readOnly": true
                    },
                    "method": {
                        "type": "string",
                        "format": "",
                        "description": "The Http method that was used in the request. Possible values are:\n* GET\n* POST\n* PUT\n* DELETE",
                        "readOnly": true
                    },
                    "header": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "Any headers that were sent in the request",
                        "readOnly": true
                    },
                    "queryParameter": {
                        "type": "string",
                        "format": "",
                        "description": "Any query parameters that were passed in the request",
                        "readOnly": true
                    },
                    "ipAddress": {
                        "type": "string",
                        "format": "",
                        "description": "IP address of the client that performed the request",
                        "readOnly": true
                    },
                    "requestTimestamp": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The unix timestamp at which the API received the request",
                        "readOnly": true
                    },
                    "body": {
                        "type": "object",
                        "additionalProperties": false,
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "array"
                            }
                        ],
                        "description": "The (optional) body of the request",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "APIResponse": {
                "type": "object",
                "required": [
                    "responseTime",
                    "code",
                    "body"
                ],
                "properties": {
                    "responseTime": {
                        "type": "number",
                        "format": "float",
                        "description": "The time it took from the moment we receive the request from the webserver till the moment we send it back to the client, measured in seconds",
                        "readOnly": true
                    },
                    "code": {
                        "type": "integer",
                        "format": "integer",
                        "description": "HTTP response status code",
                        "readOnly": true
                    },
                    "body": {
                        "type": "object",
                        "additionalProperties": false,
                        "anyOf": [
                            {
                                "type": "object"
                            },
                            {
                                "type": "array"
                            }
                        ],
                        "description": "The body of the response, in case of GET method body will be null",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "AccessDocument": {
                "type": "object",
                "required": [
                    "id",
                    "documentType",
                    "documentNumber",
                    "documentExpiration"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the document",
                        "readOnly": true
                    },
                    "documentType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Type of the document"
                    },
                    "documentNumber": {
                        "type": "string",
                        "format": "",
                        "description": "Number of document"
                    },
                    "documentExpiration": {
                        "type": "string",
                        "format": "",
                        "description": "Expiration date of document"
                    }
                },
                "additionalProperties": false
            },
            "AccountAPIKeyIPWhitelist": {
                "type": "object",
                "required": [
                    "id",
                    "active",
                    "updatedAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whitelist ID",
                        "readOnly": true
                    },
                    "ipStart": {
                        "type": "string",
                        "format": "",
                        "description": "Start IP of API key IP whitelist range",
                        "nullable": true
                    },
                    "ipEnd": {
                        "type": "string",
                        "format": "",
                        "description": "End IP of API key IP whitelist range",
                        "nullable": true
                    },
                    "ipRange": {
                        "type": "string",
                        "format": "",
                        "description": "CIDR IP range of API key whitelist",
                        "nullable": true
                    },
                    "comments": {
                        "type": "string",
                        "format": "",
                        "description": "IP whitelist range comments",
                        "nullable": true
                    },
                    "active": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not this IP whitelist range is active"
                    },
                    "updatedAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Last time this IP whitelist range was updated",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "AccountActionLog": {
                "type": "object",
                "required": [
                    "remoteIP",
                    "title",
                    "description",
                    "date",
                    "time",
                    "timestamp"
                ],
                "properties": {
                    "remoteIP": {
                        "type": "string",
                        "format": "",
                        "description": "Remote ip address",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "format": "",
                        "description": "Title Of The action",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "format": "",
                        "description": "A description about the action",
                        "readOnly": true
                    },
                    "date": {
                        "type": "string",
                        "format": "",
                        "description": "Log creation date",
                        "readOnly": true,
                        "deprecated": true
                    },
                    "time": {
                        "type": "string",
                        "format": "",
                        "description": "Log creation time",
                        "readOnly": true,
                        "deprecated": true
                    },
                    "timestamp": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The unix time at which the log was created",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "AccountApiKey": {
                "type": "object",
                "required": [
                    "id",
                    "category",
                    "key",
                    "assignOdpServerIps",
                    "used"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "API key ID",
                        "readOnly": true
                    },
                    "category": {
                        "type": "integer",
                        "format": "integer",
                        "description": "API key access category"
                    },
                    "key": {
                        "type": "string",
                        "format": "",
                        "description": "API key",
                        "readOnly": true
                    },
                    "note": {
                        "type": "string",
                        "format": "",
                        "description": "API key note",
                        "nullable": true
                    },
                    "assignOdpServerIps": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not to assign ODP server IPs"
                    },
                    "used": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Number of times that the API key was used",
                        "readOnly": true
                    },
                    "expiresAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "API key expiration time as UNIX timestamp",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "AccountBillingDetails": {
                "type": "object",
                "required": [
                    "firstName",
                    "lastName",
                    "address",
                    "streetNumber",
                    "zipCode",
                    "city",
                    "countryCode",
                    "bundleInvoicesOfSameCategory",
                    "receivePaymentConfirmationsViaEmail",
                    "preferredPaymentMethod"
                ],
                "properties": {
                    "firstName": {
                        "type": "string",
                        "format": "",
                        "description": "Billing first name."
                    },
                    "lastName": {
                        "type": "string",
                        "format": "",
                        "description": "Billing last name."
                    },
                    "address": {
                        "type": "string",
                        "format": "",
                        "description": "Billing address."
                    },
                    "streetNumber": {
                        "type": "string",
                        "format": "",
                        "description": "Billing street number."
                    },
                    "zipCode": {
                        "type": "string",
                        "format": "",
                        "description": "Billing ZIP code."
                    },
                    "city": {
                        "type": "string",
                        "format": "",
                        "description": "Billing city."
                    },
                    "countryCode": {
                        "type": "string",
                        "format": "",
                        "description": "Country code in ISO 3166-1 alpha-2 format."
                    },
                    "phoneNumber": {
                        "type": "string",
                        "format": "",
                        "description": "Billing phone number. Either this or phoneNumberMobile is required.",
                        "nullable": true
                    },
                    "phoneNumberMobile": {
                        "type": "string",
                        "format": "",
                        "description": "Billing mobile phone number. Either this or phoneNumber is required.",
                        "nullable": true
                    },
                    "emailAddressBilling": {
                        "type": "string",
                        "format": "",
                        "description": "Email address for billing emails",
                        "nullable": true
                    },
                    "bundleInvoicesOfSameCategory": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not to bundle invoices of the same category"
                    },
                    "receivePaymentConfirmationsViaEmail": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not to send email confirmations via email"
                    },
                    "preferredPaymentMethod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Preferred payment method"
                    }
                },
                "additionalProperties": false
            },
            "AccountDetails": {
                "type": "object",
                "required": [
                    "accountType",
                    "firstName",
                    "lastName",
                    "address",
                    "streetNumber",
                    "zipCode",
                    "city",
                    "countryCode",
                    "emailAddress",
                    "unconfirmedEmail",
                    "emailAddressValidated",
                    "language",
                    "agreeDpa",
                    "isAllowedFlexMetal"
                ],
                "properties": {
                    "accountType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Account type: 1 - consumer, 2 - business. Can only be updated by submitting a support ticket."
                    },
                    "companyName": {
                        "type": "string",
                        "format": "",
                        "description": "Company name (for business accounts). Can only be updated by submitting a support ticket.",
                        "nullable": true
                    },
                    "vatNumber": {
                        "type": "string",
                        "format": "",
                        "description": "VAT number (for business accounts). Can only be updated by submitting a support ticket.",
                        "nullable": true
                    },
                    "cocNumber": {
                        "type": "string",
                        "format": "",
                        "description": "CoC number (only for Netherlands accounts). Can only be updated by submitting a support ticket.",
                        "nullable": true
                    },
                    "firstName": {
                        "type": "string",
                        "format": "",
                        "description": "First name."
                    },
                    "lastName": {
                        "type": "string",
                        "format": "",
                        "description": "Last name."
                    },
                    "address": {
                        "type": "string",
                        "format": "",
                        "description": "Address - street name."
                    },
                    "streetNumber": {
                        "type": "string",
                        "format": "",
                        "description": "House number"
                    },
                    "zipCode": {
                        "type": "string",
                        "format": "",
                        "description": "ZIP / Post code."
                    },
                    "city": {
                        "type": "string",
                        "format": "",
                        "description": "City."
                    },
                    "countryCode": {
                        "type": "string",
                        "format": "",
                        "description": "Country code in ISO 3166-1 alpha-2 format."
                    },
                    "emailAddress": {
                        "type": "string",
                        "format": "",
                        "description": "Email address",
                        "readOnly": true
                    },
                    "unconfirmedEmail": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UnconfirmedEmail"
                            }
                        ],
                        "description": "Email address which is not confirmed yet",
                        "nullable": true,
                        "readOnly": true
                    },
                    "emailAddressValidated": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not email address has been confirmed",
                        "nullable": true,
                        "readOnly": true
                    },
                    "phoneNumber": {
                        "type": "string",
                        "format": "",
                        "description": "Phone number. Either this or phoneNumberMobile is required",
                        "nullable": true
                    },
                    "phoneNumberMobile": {
                        "type": "string",
                        "format": "",
                        "description": "Mobile phone number. Either this or phoneNumber is required",
                        "nullable": true
                    },
                    "language": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Preferred language: 0 - english, 1 - dutch"
                    },
                    "emailAddressAbuse": {
                        "type": "string",
                        "format": "",
                        "description": "Email address for abuse emails",
                        "nullable": true
                    },
                    "newsletter": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not newsletter is subscribed to",
                        "nullable": true
                    },
                    "agreeToc": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Terms and Conditions are agreed to. Cannot be changed after agreeing.",
                        "nullable": true
                    },
                    "agreeAup": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Acceptable Use Policy is agreed to. Cannot be changed after agreeing.",
                        "nullable": true
                    },
                    "agreeDpa": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Data Processing Agreement is agreed to. Cannot be changed after agreeing.",
                        "nullable": true
                    },
                    "isAllowedFlexMetal": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not the user is allowed to order flexmetal servers."
                    }
                },
                "additionalProperties": false
            },
            "AccountDocument": {
                "type": "object",
                "required": [
                    "id",
                    "documentType",
                    "documentNumber",
                    "documentExpiration"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the document",
                        "readOnly": true
                    },
                    "documentType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Type of the document"
                    },
                    "documentNumber": {
                        "type": "string",
                        "format": "",
                        "description": "Number of document"
                    },
                    "documentExpiration": {
                        "type": "string",
                        "format": "",
                        "description": "Expiration date of document"
                    }
                },
                "additionalProperties": false
            },
            "AccountFile": {
                "type": "object",
                "required": [
                    "id",
                    "category",
                    "name",
                    "filename",
                    "type",
                    "size",
                    "uploadedAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "File ID",
                        "readOnly": true
                    },
                    "category": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the category of the file"
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "File display name"
                    },
                    "filename": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the file"
                    },
                    "type": {
                        "type": "string",
                        "format": "",
                        "description": "File MIME type",
                        "readOnly": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "integer",
                        "description": "File size in bytes",
                        "readOnly": true
                    },
                    "uploadedAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "UNIX timestamp of when the file was uploaded",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "AccountIPWhitelist": {
                "type": "object",
                "required": [
                    "id",
                    "active",
                    "createdAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "IP whitelist ID",
                        "readOnly": true
                    },
                    "ipStart": {
                        "type": "string",
                        "format": "",
                        "description": "First IP in range",
                        "nullable": true
                    },
                    "ipEnd": {
                        "type": "string",
                        "format": "",
                        "description": "Last IP in range",
                        "nullable": true
                    },
                    "ipRange": {
                        "type": "string",
                        "format": "",
                        "description": "IP range with network suffix such as /24, /32, etc.",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "format": "",
                        "description": "Description of whitelisted IP or range"
                    },
                    "active": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not this whitelist entry is active"
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Unix timestamp of when the IP whitelisting was created",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "AccountSignUp": {
                "type": "object",
                "required": [
                    "emailAddress",
                    "password",
                    "firstName",
                    "lastName",
                    "newsletter",
                    "agreeToc",
                    "agreeAup",
                    "agreeDpa"
                ],
                "properties": {
                    "emailAddress": {
                        "type": "string",
                        "format": "",
                        "description": "New Account Email Address"
                    },
                    "password": {
                        "type": "string",
                        "format": "",
                        "description": "New Account Password"
                    },
                    "firstName": {
                        "type": "string",
                        "format": "",
                        "description": "First name."
                    },
                    "lastName": {
                        "type": "string",
                        "format": "",
                        "description": "Last name."
                    },
                    "newsletter": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not newsletter is subscribed to"
                    },
                    "agreeToc": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Terms and Conditions are agreed to. Cannot be changed after agreeing."
                    },
                    "agreeAup": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Acceptable Use Policy is agreed to. Cannot be changed after agreeing."
                    },
                    "agreeDpa": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Data Processing Agreement is agreed to. Cannot be changed after agreeing."
                    }
                },
                "additionalProperties": false
            },
            "ApplicationInstanceStopMethod": {
                "type": "object",
                "properties": {
                    "methodId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Stop method type, list of types can be found in: [GET /v3/application/stopMethod](game-publisher#/Application/getApplicationStopMethods)"
                    },
                    "timeout": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Stop method timeout in seconds, default value is 1800 seconds."
                    }
                },
                "additionalProperties": false
            },
            "CDNUserFeaturesModel": {
                "type": "object",
                "required": [
                    "type",
                    "features"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": ""
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FeatureModel"
                        }
                    }
                },
                "additionalProperties": false
            },
            "CPUTriggerRule": {
                "type": "object",
                "required": [
                    "operator",
                    "triggerWindow",
                    "threshold"
                ],
                "properties": {
                    "operator": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The operator used for this rule, you can find the list on this endpoint [GET /v3/trigger/type/operators](all#/Trigger/getTriggerTypeOperators)"
                    },
                    "triggerWindow": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The time window for a rule, time will be in seconds"
                    },
                    "threshold": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The percentage of cpu (between 0 and 100%) usage were the event should be triggered on"
                    }
                },
                "additionalProperties": false
            },
            "CalcCategory": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of a category"
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Name of a category"
                    }
                },
                "additionalProperties": false
            },
            "CalcCategoryLocation": {
                "type": "object",
                "required": [
                    "categoryIds",
                    "locationId",
                    "countryName",
                    "countryNameShort",
                    "regionId",
                    "regionName",
                    "continent",
                    "city",
                    "locationBwPriceDedi",
                    "locationBwOverusePriceDedi",
                    "locationBwPriceColo",
                    "locationBwOverusePriceColo"
                ],
                "properties": {
                    "categoryIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "integer"
                        },
                        "description": "Category IDs"
                    },
                    "locationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Location ID"
                    },
                    "countryName": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the country of this location"
                    },
                    "countryNameShort": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the country of this location"
                    },
                    "regionId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Region ID"
                    },
                    "regionName": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the region this location is situated in (regions are smaller than continents, but may be a whole continent)."
                    },
                    "continent": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the continent of this location"
                    },
                    "city": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the city of this location"
                    },
                    "locationBwPriceDedi": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Dedicated server bandwidth price per TB for this location, in cents"
                    },
                    "locationBwOverusePriceDedi": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Dedicated server bandwidth overuse price per TB for this location, in cents"
                    },
                    "locationBwPriceColo": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Colocation bandwidth price per TB for this location, in cents"
                    },
                    "locationBwOverusePriceColo": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Colocation bandwidth overuse price per TB for this location, in cents"
                    }
                },
                "additionalProperties": false
            },
            "CalcCategoryMargins": {
                "type": "object",
                "required": [
                    "resellerTypeId",
                    "resellerTypeName",
                    "categoryId",
                    "marginFactor"
                ],
                "properties": {
                    "resellerTypeId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of a reseller type"
                    },
                    "resellerTypeName": {
                        "type": "string",
                        "format": "",
                        "description": "Name of a reseller type"
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the category"
                    },
                    "marginFactor": {
                        "type": "number",
                        "format": "float",
                        "description": "ID of a category"
                    }
                },
                "additionalProperties": false
            },
            "CalcConfig": {
                "type": "object",
                "required": [
                    "id",
                    "tag",
                    "locationId",
                    "price",
                    "setup",
                    "flags",
                    "bwPriceDedi",
                    "bwPriceColo",
                    "fixed",
                    "noDowngrade",
                    "instantDeliverable",
                    "groups"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration ID"
                    },
                    "tag": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration tag"
                    },
                    "locationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Location ID, as provided by /locations"
                    },
                    "price": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration price in cents"
                    },
                    "setup": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration setup price in cents"
                    },
                    "flags": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration flags\nIMMUTABLE         1;\nINSTANT_CONFIG    2;\nALLOW_DOWNGRADE   4;\nIS_DEAL           8;\nON_DEAL_PAGE      16;\nCOLO_NO_CONN      32;\nPRIVATE_CONFIG    64;"
                    },
                    "bwPriceDedi": {
                        "type": "integer",
                        "format": "integer",
                        "description": "TB price for dedicated servers, in cents"
                    },
                    "bwPriceColo": {
                        "type": "integer",
                        "format": "integer",
                        "description": "TB price for colocation, in cents"
                    },
                    "fixed": {
                        "type": "boolean",
                        "description": "Whether this configuration is adjustable"
                    },
                    "noDowngrade": {
                        "type": "boolean",
                        "description": "Whether items in this configuration can be downgraded"
                    },
                    "instantDeliverable": {
                        "type": "boolean",
                        "description": "Whether this configuration can be setup instantly and automatically (low wait time)"
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalcGroup"
                        },
                        "description": "All item groups for this configuration"
                    }
                },
                "additionalProperties": false
            },
            "CalcGroup": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "code",
                    "type",
                    "fixed",
                    "step",
                    "flags",
                    "noDowngrade",
                    "displayOrder",
                    "dependencyGroupId",
                    "dependencyItemIds",
                    "notes",
                    "items",
                    "defaultItemId"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration group ID"
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "ApplicationInstanceConfiguration group name"
                    },
                    "code": {
                        "type": "string",
                        "format": "",
                        "description": "ApplicationInstanceConfiguration group code"
                    },
                    "type": {
                        "type": "string",
                        "format": "",
                        "description": "ApplicationInstanceConfiguration group type (a human readable unique identifier)"
                    },
                    "fixed": {
                        "type": "boolean",
                        "description": "Whether items in this configuration group are adjustable"
                    },
                    "step": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration group divider (for visual differentiation between related groups)"
                    },
                    "flags": {
                        "type": "integer",
                        "format": "integer",
                        "description": "FLAG_HASQUANTITY                  1\nFLAG_HASPRICE                     2\nFLAG_ALLOW_EMPTY_SELECTION        4\nFLAG_INCLUDE_ON_INVOICE_IF_EMPTY  8\nFLAG_NOTE_ACTIVE                  16\nFLAG_APPLY_PERIOD_DISCOUNT        32\nFLAG_EXCLUDE_FROM_UPGRADES        64"
                    },
                    "noDowngrade": {
                        "type": "boolean",
                        "description": "Whether items in this configuration group can be downgraded"
                    },
                    "displayOrder": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration group display order"
                    },
                    "dependencyGroupId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If > 0, this group will only relevant / shown if the dependency group and/or item is selected."
                    },
                    "dependencyItemIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "integer"
                        },
                        "description": "If dependencyGroupId > 0, this group will only relevant / shown if (one of) these dependencyItemIds are selected."
                    },
                    "notes": {
                        "type": "string",
                        "format": "",
                        "description": "Optional notes for a group, for displaying purposes."
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalcItem"
                        },
                        "description": "All items for this configuration group"
                    },
                    "defaultItemId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Default item in a group"
                    }
                },
                "additionalProperties": false
            },
            "CalcItem": {
                "type": "object",
                "required": [
                    "id",
                    "code",
                    "name",
                    "shortName",
                    "ident",
                    "quantity",
                    "specifications",
                    "flags",
                    "price",
                    "setupPrice",
                    "priceLinkGroupId",
                    "priceLinkPercentage",
                    "displayOrder",
                    "excludeConfigs",
                    "excludeLocationIds"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration item ID"
                    },
                    "code": {
                        "type": "string",
                        "format": "",
                        "description": "ApplicationInstanceConfiguration item code"
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Item name"
                    },
                    "shortName": {
                        "type": "string",
                        "format": "",
                        "description": "Item name short"
                    },
                    "ident": {
                        "type": "string",
                        "format": "",
                        "description": "Item human readable unique identifier"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item quantity"
                    },
                    "specifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalcItemSpecification"
                        },
                        "description": "Item specifications"
                    },
                    "flags": {
                        "type": "integer",
                        "format": "integer",
                        "description": "FLAG_NOTE_ACTIVE 1"
                    },
                    "price": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item price in cents"
                    },
                    "setupPrice": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item setup price in cents"
                    },
                    "priceLinkGroupId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item price is dependent on the price of this group or the entire order.\nIf -1, the price is a percentage (priceLinkPercentage) of the order.\nIf > 0, the price is a percentage (priceLinkPercentage) of the indicated group."
                    },
                    "priceLinkPercentage": {
                        "type": "number",
                        "format": "float",
                        "description": "The percentage as refered to by priceLinkGroupId description."
                    },
                    "displayOrder": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item display order"
                    },
                    "excludeConfigs": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "integer"
                        },
                        "description": "ApplicationInstanceConfiguration IDs from which this item must be excluded."
                    },
                    "excludeLocationIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "integer"
                        },
                        "description": "Location IDs from which this item must be excluded."
                    }
                },
                "additionalProperties": false
            },
            "CalcItemSpecification": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "value",
                    "dataType",
                    "mandatory"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item specification ID"
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Item specification name"
                    },
                    "value": {
                        "type": "string",
                        "format": "",
                        "description": "Item specification value"
                    },
                    "dataType": {
                        "type": "string",
                        "format": "",
                        "description": "Item specification data type (int, float, string)"
                    },
                    "mandatory": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether this item specification is mandatory"
                    }
                },
                "additionalProperties": false
            },
            "CalcOrder": {
                "type": "object",
                "required": [
                    "id",
                    "finalized",
                    "createdAt",
                    "modifiedAt",
                    "quantity",
                    "title",
                    "categoryId",
                    "categoryName",
                    "configTag",
                    "configName",
                    "configFlags",
                    "instantDeliverable",
                    "price",
                    "setup",
                    "vat",
                    "vatPercentage",
                    "items"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order ID"
                    },
                    "finalized": {
                        "type": "boolean",
                        "description": "Whether the order has been added to your cart."
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order creation unix timestamp"
                    },
                    "modifiedAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order last modification unix timestamp"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order quantity multiplier"
                    },
                    "title": {
                        "type": "string",
                        "format": "",
                        "description": "Order title"
                    },
                    "categoryId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order shop category ID"
                    },
                    "categoryName": {
                        "type": "string",
                        "format": "",
                        "description": "Order shop category name"
                    },
                    "configTag": {
                        "type": "string",
                        "format": "",
                        "description": "The tag of the configuration this order is based upon."
                    },
                    "configName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the configuration this order is based upon."
                    },
                    "configFlags": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ApplicationInstanceConfiguration flags\nIMMUTABLE         1;\nINSTANT_CONFIG    2;\nALLOW_DOWNGRADE   4;\nIS_DEAL           8;\nON_DEAL_PAGE      16;\nCOLO_NO_CONN      32;\nPRIVATE_CONFIG    64;"
                    },
                    "instantDeliverable": {
                        "type": "boolean",
                        "description": "Whether this configuration can be setup instantly and automatically (low wait time)"
                    },
                    "price": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order price in cents"
                    },
                    "setup": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order setup price in cents"
                    },
                    "vat": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order VAT in cents"
                    },
                    "vatPercentage": {
                        "type": "number",
                        "format": "float",
                        "description": "Order VAT percentage"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalcOrderItem"
                        },
                        "description": "All items and quantities in the order"
                    }
                },
                "additionalProperties": false
            },
            "CalcOrderCreate": {
                "type": "object",
                "required": [
                    "configTag",
                    "couponTag",
                    "instantFinalize"
                ],
                "properties": {
                    "configTag": {
                        "type": "string",
                        "format": "",
                        "description": "Configuration tag to create an order from."
                    },
                    "couponTag": {
                        "type": "string",
                        "format": "",
                        "description": "Coupon tag to apply to the order."
                    },
                    "instantFinalize": {
                        "type": "boolean",
                        "description": "Whether you want to immediately make the order available for checkout."
                    }
                },
                "additionalProperties": false
            },
            "CalcOrderItem": {
                "type": "object",
                "required": [
                    "itemId",
                    "groupId",
                    "quantity"
                ],
                "properties": {
                    "itemId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item ID"
                    },
                    "groupId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item group ID"
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Item quantity"
                    }
                },
                "additionalProperties": false
            },
            "CalcOrderMeta": {
                "type": "object",
                "required": [
                    "id",
                    "finalized",
                    "instantDeliverable"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order ID"
                    },
                    "finalized": {
                        "type": "boolean",
                        "description": "True if an order has been added to the cart."
                    },
                    "instantDeliverable": {
                        "type": "boolean",
                        "description": "Whether this order is instantly deliverable (normally speaking)"
                    }
                },
                "additionalProperties": false
            },
            "CalcOrderQuote": {
                "type": "object",
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "phone"
                ],
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Customer's user ID"
                    },
                    "firstName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 64,
                        "format": "",
                        "description": "Customer's first name"
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 128,
                        "format": "",
                        "description": "Customer's last name"
                    },
                    "companyName": {
                        "type": "string",
                        "maxLength": 120,
                        "format": "",
                        "description": "Customer's company name (optional)"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 128,
                        "format": "",
                        "description": "Customer's email address"
                    },
                    "phone": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 15,
                        "format": "",
                        "description": "Customer's phone number"
                    },
                    "remarks": {
                        "type": "string",
                        "maxLength": 4000,
                        "format": "",
                        "description": "Remarks contain specific question(s) regarding the quote"
                    }
                },
                "additionalProperties": false
            },
            "CalcOrderUpdate": {
                "type": "object",
                "required": [
                    "quantity",
                    "items"
                ],
                "properties": {
                    "quantity": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Order quantity"
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CalcOrderItem"
                        },
                        "description": "Order items"
                    }
                },
                "additionalProperties": false
            },
            "CalcServiceVatPercentage": {
                "type": "object",
                "required": [
                    "taxPercent"
                ],
                "properties": {
                    "taxPercent": {
                        "type": "number",
                        "format": "float",
                        "description": "VAT percentage"
                    }
                },
                "additionalProperties": false
            },
            "CallbackSetting": {
                "type": "object",
                "required": [
                    "id",
                    "url"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Callback setting ID, can be used as callbackSettingId in other endpoints.",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "format": "",
                        "description": "This is the url that the system will use when the callback is executed."
                    },
                    "urlDescription": {
                        "type": "string",
                        "format": "",
                        "description": "Description of the callback setting."
                    },
                    "headers": {
                        "type": "string",
                        "format": "",
                        "description": "For sending additional meta information about the callback request."
                    }
                },
                "additionalProperties": false
            },
            "ColocatedAccess": {
                "type": "object",
                "required": [
                    "id",
                    "email",
                    "mobile",
                    "firstName",
                    "lastName",
                    "birthDate",
                    "companyName"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of colocation access request",
                        "readOnly": true
                    },
                    "visitorId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the visitor"
                    },
                    "email": {
                        "type": "string",
                        "format": "",
                        "description": "The e-mail address of the visitor"
                    },
                    "mobile": {
                        "type": "string",
                        "format": "",
                        "description": "The mobile phone number of the visitor"
                    },
                    "firstName": {
                        "type": "string",
                        "format": "",
                        "description": "The first name of the visitor"
                    },
                    "lastName": {
                        "type": "string",
                        "format": "",
                        "description": "The last name of the visitor"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "",
                        "description": "The birth date of the visitor"
                    },
                    "companyName": {
                        "type": "string",
                        "format": "",
                        "description": "The company name of visitor"
                    },
                    "colocatedAccessServer": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ColocatedAccessServer"
                        },
                        "description": "The colocated servers to which access is requested. if this is empty then the visitor get access to all colocated servers of the requester",
                        "nullable": true
                    },
                    "temporaryAccess": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If this field is set to 1, then the visitor has a temporary access",
                        "nullable": true
                    },
                    "visitRequester": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If this field is set to 1, then this visitor can add a temporary access for other visitor",
                        "nullable": true
                    },
                    "permanentRequester": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If this field is set to 1, then this visitor can request a permanent access for other visitor",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ColocatedAccessDetails": {
                "type": "object",
                "required": [
                    "id",
                    "visitorId",
                    "email",
                    "mobile",
                    "firstName",
                    "lastName",
                    "birthDate",
                    "countryEn",
                    "accountDocument",
                    "createdBy",
                    "newEntry",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of colocation access request",
                        "readOnly": true
                    },
                    "visitorId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the user"
                    },
                    "datacenterId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of data center",
                        "nullable": true
                    },
                    "dateverified": {
                        "type": "string",
                        "format": "",
                        "description": "The date when the user was verified",
                        "nullable": true
                    },
                    "dateonlist": {
                        "type": "string",
                        "format": "",
                        "description": "The date when the user was added to the access list",
                        "nullable": true
                    },
                    "dateofflist": {
                        "type": "string",
                        "format": "",
                        "description": "The date when the user was removed from the access list",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "format": "",
                        "description": "The e-mail address of the visitor"
                    },
                    "mobile": {
                        "type": "string",
                        "format": "",
                        "description": "The mobile phone number of the visitor"
                    },
                    "firstName": {
                        "type": "string",
                        "format": "",
                        "description": "The first name of the visitor"
                    },
                    "lastName": {
                        "type": "string",
                        "format": "",
                        "description": "The last name of the visitor"
                    },
                    "birthDate": {
                        "type": "string",
                        "format": "",
                        "description": "The birth date of the user. The format is YYYY-MM-DD"
                    },
                    "companyName": {
                        "type": "string",
                        "format": "",
                        "description": "The company name of the visitor",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "format": "",
                        "description": "The city of the visitor",
                        "nullable": true
                    },
                    "countryEn": {
                        "type": "string",
                        "format": "",
                        "description": "The country name of the visitor",
                        "readOnly": true
                    },
                    "colocatedAccessServers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ColocatedAccessServer"
                        },
                        "description": "The colocated server to which access is requested",
                        "nullable": true
                    },
                    "adminNotesReadOnly": {
                        "type": "string",
                        "format": "",
                        "description": "Notes for admins",
                        "nullable": true
                    },
                    "accountDocument": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountDocument"
                        },
                        "description": "The account document of the user",
                        "readOnly": true
                    },
                    "checked": {
                        "type": "string",
                        "format": "",
                        "description": "Was the user checked?",
                        "nullable": true
                    },
                    "createdBy": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of user creator",
                        "readOnly": true
                    },
                    "newEntry": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Is this a new entry",
                        "readOnly": true
                    },
                    "temporaryAccess": {
                        "type": "integer",
                        "format": "integer",
                        "description": "temporaryAccess If this field is set to 1, then has the visitor a temporary access",
                        "nullable": true
                    },
                    "fingerPrintId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The print ID from Syntegro system",
                        "nullable": true
                    },
                    "printMade": {
                        "type": "string",
                        "format": "",
                        "description": "Was the print made",
                        "nullable": true
                    },
                    "visitRequester": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If this field is set to 1, then this visitor can add a temporary access for other visitor",
                        "nullable": true
                    },
                    "permanentRequester": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If this field is set to 1, then this visitor can request a permanent access for other visitor",
                        "nullable": true
                    },
                    "syntegroEmployeeCode": {
                        "type": "string",
                        "format": "",
                        "description": "The Syntegro employee code of visitor",
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "format": "",
                        "description": "The status of the visitor (granted, pending, denied, revoked, suspended)",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocatedAccessServer": {
                "type": "object",
                "required": [
                    "coloserverId",
                    "rackname"
                ],
                "properties": {
                    "coloserverId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the colocated server where the visitor has access to"
                    },
                    "rackname": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the rack where the visitor has access to"
                    }
                },
                "additionalProperties": false
            },
            "ColocatedAlert": {
                "type": "object",
                "required": [
                    "id",
                    "percentage",
                    "sendMail",
                    "sendTicket",
                    "triggered",
                    "createdAt"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Colocation alert ID",
                        "readOnly": true
                    },
                    "percentage": {
                        "type": "integer",
                        "format": "integer",
                        "description": "At what percentage of bandwidth usage to trigger the alert"
                    },
                    "sendMail": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Will send an email notification when alert is triggered"
                    },
                    "sendTicket": {
                        "type": "integer",
                        "format": "integer",
                        "description": "WIll create a ticket notification when alert is triggered"
                    },
                    "triggered": {
                        "type": "integer",
                        "format": "integer",
                        "description": "UNIX timestamp of the last time the alert was triggered",
                        "readOnly": true
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "UNIX timestamp of the time the alert was created",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocatedRack": {
                "type": "object",
                "required": [
                    "rack",
                    "rentedUnits"
                ],
                "properties": {
                    "rack": {
                        "type": "string",
                        "format": "",
                        "description": "Suit number and rack number",
                        "readOnly": true
                    },
                    "rentedUnits": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Number of units in colocation service",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocatedServer": {
                "type": "object",
                "required": [
                    "id",
                    "datacenter",
                    "rack",
                    "dateStart",
                    "dateEnd",
                    "dateCancelled",
                    "dateEndContract",
                    "contractPeriod",
                    "extendPeriod",
                    "cancellationPeriod",
                    "paymentTerm",
                    "pricePerMonth",
                    "pricePerTbOveruse",
                    "currencyId",
                    "bandwidthBillingType",
                    "bandwidthContractual",
                    "trafficSum",
                    "trafficSumMonthMbit",
                    "outgoingTrafficSum",
                    "incomingTrafficSum",
                    "powerMaxAmpere",
                    "powerKwhPrice",
                    "powerMeter",
                    "powerSumHistory",
                    "network",
                    "uplinks",
                    "unlimitedIngress"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the colocation service",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the colocation service"
                    },
                    "datacenter": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DataCenter"
                            }
                        ],
                        "description": "The data center details",
                        "readOnly": true
                    },
                    "rack": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ColocatedRack"
                            }
                        ],
                        "description": "The rack details in which the server is installed",
                        "readOnly": true
                    },
                    "dateStart": {
                        "type": "string",
                        "format": "",
                        "description": "Contract start date",
                        "readOnly": true
                    },
                    "dateEnd": {
                        "type": "string",
                        "format": "",
                        "description": "The date until which the service is paid",
                        "readOnly": true
                    },
                    "dateCancelled": {
                        "type": "string",
                        "format": "",
                        "description": "Contract cancel date if contract is cancelled",
                        "readOnly": true
                    },
                    "dateEndContract": {
                        "type": "string",
                        "format": "",
                        "description": "Contract end date",
                        "readOnly": true
                    },
                    "contractPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The duration of the contract in months",
                        "readOnly": true
                    },
                    "extendPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The extended period of the contract in months",
                        "readOnly": true
                    },
                    "cancellationPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The cancellation period in months",
                        "readOnly": true
                    },
                    "purchaseOrder": {
                        "type": "string",
                        "format": "",
                        "description": "The order-name to which the server belongs"
                    },
                    "paymentTerm": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The duration in which the invoice has to be paid after receiving.",
                        "readOnly": true
                    },
                    "pricePerMonth": {
                        "type": "string",
                        "format": "",
                        "description": "The price of this colocated server per month in cents",
                        "readOnly": true
                    },
                    "pricePerTbOveruse": {
                        "type": "string",
                        "format": "",
                        "description": "The price of traffic overuse in cents (per TB) (see `currencyId` for currency)",
                        "readOnly": true
                    },
                    "currencyId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The currency in which the various 'price' fields are:\n* 0: EURO\n* 1: USD\n* 9: YEN",
                        "readOnly": true
                    },
                    "bandwidthBillingType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The bandwidth billing method for this service:\n* 1: unmetered connection\n* 2: measured in TB per month\n* 3: measured in mbit 95th percentile",
                        "readOnly": true
                    },
                    "bandwidthContractual": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The contractual maximum bandwidth usage value. In GB if bandwidthBillingType equals `2`, in mbit otherwise",
                        "readOnly": true
                    },
                    "trafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The total used traffic (Mbit or GB, incoming + outgoing)",
                        "readOnly": true
                    },
                    "trafficSumMonthMbit": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The total used traffic (Mbit) for 95th percentile",
                        "readOnly": true
                    },
                    "outgoingTrafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The outgoing traffic (Mbit or GB)",
                        "readOnly": true
                    },
                    "incomingTrafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The incoming traffic (Mbit or GB)",
                        "readOnly": true
                    },
                    "powerMaxAmpere": {
                        "type": "string",
                        "format": "",
                        "description": "Contractual maximum usable amperage",
                        "readOnly": true
                    },
                    "powerKwhPrice": {
                        "type": "string",
                        "format": "",
                        "description": "The power price per kWh in cents",
                        "readOnly": true
                    },
                    "powerMeter": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The current power meter(kWh)",
                        "readOnly": true
                    },
                    "powerSumHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PowerConsumptionPerDay"
                        },
                        "description": "The history of the power usage and the power meter",
                        "readOnly": true
                    },
                    "network": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Network"
                        },
                        "description": "The network connection specifications",
                        "readOnly": true
                    },
                    "uplinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ColocatedServerUplink"
                        },
                        "description": "The available uplinks for this colocated server",
                        "readOnly": true
                    },
                    "unlimitedIngress": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Does the service have free incoming traffic?",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocatedServerUplink": {
                "type": "object",
                "required": [
                    "uplinkId",
                    "aggregate"
                ],
                "properties": {
                    "uplinkId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The cacti ID of the uplink",
                        "readOnly": true
                    },
                    "aggregate": {
                        "type": "boolean",
                        "description": "True if the uplink is an aggregated uplink, false if it is not aggregated",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocationNetworkDataTelemetry": {
                "type": "object",
                "required": [
                    "timestamp",
                    "networkIngress",
                    "networkEgress"
                ],
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The time at which the last update occurred",
                        "readOnly": true
                    },
                    "networkIngress": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The network's ingress in bytes",
                        "readOnly": true
                    },
                    "networkEgress": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The network's egress in bytes",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocationNetworkTelemetry": {
                "type": "object",
                "required": [
                    "unit",
                    "data"
                ],
                "properties": {
                    "unit": {
                        "type": "string",
                        "format": "",
                        "description": "Unit of data frequency (hour by default)",
                        "readOnly": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ColocationNetworkDataTelemetry"
                        },
                        "description": "Contains the data object",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocationOveruseTelemetry": {
                "type": "object",
                "required": [
                    "coloId",
                    "coloName",
                    "orderedBandwidth",
                    "usedBandwidth"
                ],
                "properties": {
                    "coloId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the colocation",
                        "readOnly": true
                    },
                    "coloName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the colocation",
                        "readOnly": true
                    },
                    "orderedBandwidth": {
                        "type": "number",
                        "format": "float",
                        "description": "Allowed bandwidth of the host",
                        "readOnly": true
                    },
                    "usedBandwidth": {
                        "type": "number",
                        "format": "float",
                        "description": "Used bandwidth of the host",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocationPDUHistoryDataTelemetry": {
                "type": "object",
                "required": [
                    "timestamp",
                    "amps",
                    "volts",
                    "kwh",
                    "powerMeter"
                ],
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The time at which the last update occurred",
                        "readOnly": true
                    },
                    "amps": {
                        "type": "number",
                        "format": "float",
                        "description": "The value of amps at that time",
                        "readOnly": true
                    },
                    "volts": {
                        "type": "number",
                        "format": "float",
                        "description": "The value of volts at that time",
                        "readOnly": true
                    },
                    "kwh": {
                        "type": "number",
                        "format": "float",
                        "description": "The value of kwh at that time",
                        "readOnly": true
                    },
                    "powerMeter": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The value of power meter at that time",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocationPDUHistoryTelemetry": {
                "type": "object",
                "required": [
                    "unit",
                    "data"
                ],
                "properties": {
                    "unit": {
                        "type": "string",
                        "format": "",
                        "description": "Unit of data frequency, which is always `null` in this endpoint. This property is there\nfor consistency across all telemetry endpoints. It's `null` because the data is not aggregated",
                        "readOnly": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ColocationPDUHistoryDataTelemetry"
                        },
                        "description": "Contains the data object",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ColocationPDUTelemetry": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "kwh"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the colocation service",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the colocation service",
                        "readOnly": true
                    },
                    "kwh": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Current month kilo watts per hour",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Conduit": {
                "type": "object",
                "required": [
                    "conduitName",
                    "powerMeter",
                    "amperage",
                    "peakAmperage"
                ],
                "properties": {
                    "conduitName": {
                        "type": "string",
                        "format": "",
                        "description": "The feed name"
                    },
                    "powerMeter": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The last registered counter value for this outlet"
                    },
                    "amperage": {
                        "type": "number",
                        "format": "float",
                        "description": "The total amperage supported by the outlet"
                    },
                    "peakAmperage": {
                        "type": "number",
                        "format": "float",
                        "description": "The peak amperage"
                    }
                },
                "additionalProperties": false
            },
            "Country": {
                "type": "object",
                "required": [
                    "id",
                    "code",
                    "name",
                    "continent"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The country ID",
                        "readOnly": true
                    },
                    "code": {
                        "type": "string",
                        "format": "",
                        "description": "The country code",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The country name",
                        "readOnly": true
                    },
                    "continent": {
                        "type": "string",
                        "format": "",
                        "description": "The continent name",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "CrossConnect": {
                "type": "object",
                "required": [
                    "id",
                    "dateStart",
                    "dateEnd",
                    "dateCancelled",
                    "dateEndContract",
                    "contractPeriod",
                    "extendPeriod",
                    "cancellationPeriod",
                    "paymentTerm",
                    "monthlyFee",
                    "setupFee",
                    "currencyId",
                    "colocatedServerId",
                    "hostId",
                    "locationIdSideA",
                    "locationIdSideAName",
                    "locationIdSideZ",
                    "locationIdSideZName",
                    "locationDetails",
                    "rackIdSideA",
                    "rackIdSideAName",
                    "rackIdSideZ",
                    "rackIdSideZName",
                    "goLiveDate",
                    "internalId",
                    "patchInternalName",
                    "thirdPartyId",
                    "vendorId",
                    "cableType",
                    "cableSpeed",
                    "connectorSideAType",
                    "connectorSideZType",
                    "diverseFromPatchId",
                    "customerNotes",
                    "uplinks",
                    "connectivityType",
                    "outgoingTrafficSum",
                    "incomingTrafficSum",
                    "bandwidthBillingType"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Cross connect ID",
                        "readOnly": true
                    },
                    "dateStart": {
                        "type": "string",
                        "format": "",
                        "description": "Start date of the cross connect",
                        "readOnly": true
                    },
                    "dateEnd": {
                        "type": "string",
                        "format": "",
                        "description": "End date of the cross connect",
                        "readOnly": true
                    },
                    "dateCancelled": {
                        "type": "string",
                        "format": "",
                        "description": "Cancelled date of the cross connect",
                        "readOnly": true
                    },
                    "dateEndContract": {
                        "type": "string",
                        "format": "",
                        "description": "End contract date of the cross connect",
                        "readOnly": true
                    },
                    "contractPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Contract period of the cross connect",
                        "readOnly": true
                    },
                    "extendPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Extend period of the cross connect",
                        "readOnly": true
                    },
                    "cancellationPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The cancellation period in months",
                        "readOnly": true
                    },
                    "paymentTerm": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Payment term of the cross connect",
                        "readOnly": true
                    },
                    "purchaseOrder": {
                        "type": "string",
                        "format": "",
                        "description": "Purchase order of the cross connect"
                    },
                    "monthlyFee": {
                        "type": "string",
                        "format": "",
                        "description": "Monthly fee of the cross connect in cents",
                        "readOnly": true
                    },
                    "setupFee": {
                        "type": "string",
                        "format": "",
                        "description": "Setup fee of the cross connect in cents",
                        "readOnly": true
                    },
                    "currencyId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The currency ID\n* 0: EURO\n* 1: USD\n* 9: YEN",
                        "readOnly": true
                    },
                    "colocatedServerId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Colocated server ID",
                        "readOnly": true
                    },
                    "hostId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Host ID",
                        "readOnly": true
                    },
                    "locationIdSideA": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Location ID of the Side A",
                        "readOnly": true
                    },
                    "locationIdSideAName": {
                        "type": "string",
                        "format": "",
                        "description": "Location name of the Side A",
                        "readOnly": true
                    },
                    "locationIdSideZ": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Location ID of the Side B",
                        "readOnly": true
                    },
                    "locationIdSideZName": {
                        "type": "string",
                        "format": "",
                        "description": "Location name of the Side B",
                        "readOnly": true
                    },
                    "locationDetails": {
                        "type": "string",
                        "format": "",
                        "description": "Location details",
                        "readOnly": true
                    },
                    "rackIdSideA": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Rack ID of the Side A",
                        "readOnly": true
                    },
                    "rackIdSideAName": {
                        "type": "string",
                        "format": "",
                        "description": "Rack Name of the Side A",
                        "readOnly": true
                    },
                    "rackIdSideZ": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Rack ID of the Side B",
                        "readOnly": true
                    },
                    "rackIdSideZName": {
                        "type": "string",
                        "format": "",
                        "description": "Rack Name of the Side B",
                        "readOnly": true
                    },
                    "goLiveDate": {
                        "type": "string",
                        "format": "",
                        "description": "Go live date",
                        "readOnly": true
                    },
                    "internalId": {
                        "type": "string",
                        "format": "",
                        "description": "Internal ID of the service",
                        "readOnly": true
                    },
                    "patchInternalName": {
                        "type": "string",
                        "format": "",
                        "description": "Internal name of the patch",
                        "readOnly": true
                    },
                    "patchCustomerName": {
                        "type": "string",
                        "format": "",
                        "description": "Customer name of the patch"
                    },
                    "thirdPartyId": {
                        "type": "string",
                        "format": "",
                        "description": "Third party ID of the service",
                        "readOnly": true
                    },
                    "vendorId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Vendor ID of the service",
                        "readOnly": true
                    },
                    "cableType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Type of cable",
                        "readOnly": true
                    },
                    "cableSpeed": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Cable speed",
                        "readOnly": true
                    },
                    "connectorSideAType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Connector of Side A",
                        "readOnly": true
                    },
                    "connectorSideZType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Connector of Side Z",
                        "readOnly": true
                    },
                    "diverseFromPatchId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Diverse from patch id",
                        "readOnly": true
                    },
                    "customerNotes": {
                        "type": "string",
                        "format": "",
                        "description": "Notes of the customer",
                        "readOnly": true
                    },
                    "uplinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UpLink"
                        },
                        "description": "The available uplinks for this cross connect",
                        "readOnly": true
                    },
                    "connectivityType": {
                        "type": "string",
                        "format": "",
                        "description": "The type of connectivity service\nFollowing will be possible values:\n* Connectivity: Transport\n* Connectivity: IP connectivity\n* Connectivity: Crossconnect",
                        "readOnly": true
                    },
                    "outgoingTrafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The outgoing traffic (Mbit or GB - defined by 'bandwidthBillingType')",
                        "readOnly": true
                    },
                    "incomingTrafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The incoming traffic (Mbit or GB - defined by 'bandwidthBillingType')",
                        "readOnly": true
                    },
                    "bandwidthBillingType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The bandwidth billing method for this service:\n* 1: unmetered connection\n* 2: measured in TB per month\n* 3: measured in mbit 95th percentile",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Currency": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "conversionRateToEuro",
                    "decimals"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Currency ID",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Currency Name",
                        "readOnly": true
                    },
                    "sign": {
                        "type": "string",
                        "format": "",
                        "description": "Currency Sign"
                    },
                    "conversionRateToEuro": {
                        "type": "number",
                        "format": "float",
                        "description": "Exchange rate to Euro",
                        "readOnly": true
                    },
                    "decimals": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Number of decimals",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "DataCenter": {
                "type": "object",
                "required": [
                    "address",
                    "contact",
                    "wifi"
                ],
                "properties": {
                    "address": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DatacenterAddress"
                            }
                        ],
                        "description": "The address of the data center",
                        "readOnly": true
                    },
                    "contact": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DatacenterContact"
                            }
                        ],
                        "description": "The contact information",
                        "readOnly": true
                    },
                    "wifi": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WifiCredential"
                            }
                        ],
                        "description": "The wifi credentials",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "DatacenterAddress": {
                "type": "object",
                "required": [
                    "name",
                    "address",
                    "zipCode",
                    "city",
                    "country"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the Location",
                        "readOnly": true
                    },
                    "address": {
                        "type": "string",
                        "format": "",
                        "description": "The address of the location",
                        "readOnly": true
                    },
                    "zipCode": {
                        "type": "string",
                        "format": "",
                        "description": "The zip-code of the location",
                        "readOnly": true
                    },
                    "city": {
                        "type": "string",
                        "format": "",
                        "description": "The city name",
                        "readOnly": true
                    },
                    "country": {
                        "type": "string",
                        "format": "",
                        "description": "The country name",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "DatacenterContact": {
                "type": "object",
                "required": [
                    "phoneNumber",
                    "emergencyPhoneNumber",
                    "faxNumber",
                    "emailAddress"
                ],
                "properties": {
                    "phoneNumber": {
                        "type": "string",
                        "format": "",
                        "description": "The phone-number",
                        "readOnly": true
                    },
                    "emergencyPhoneNumber": {
                        "type": "string",
                        "format": "",
                        "description": "The emergency phone-number",
                        "readOnly": true
                    },
                    "faxNumber": {
                        "type": "string",
                        "format": "",
                        "description": "The fax-number",
                        "readOnly": true
                    },
                    "emailAddress": {
                        "type": "string",
                        "format": "",
                        "description": "The email-address",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "EmailChange": {
                "type": "object",
                "required": [
                    "emailAddress",
                    "password"
                ],
                "properties": {
                    "emailAddress": {
                        "type": "string",
                        "format": "",
                        "description": "New email address"
                    },
                    "password": {
                        "type": "string",
                        "format": "",
                        "description": "Password of the user account"
                    }
                },
                "additionalProperties": false
            },
            "EmailConfirmation": {
                "type": "object",
                "required": [
                    "userId",
                    "hash"
                ],
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "UserId"
                    },
                    "hash": {
                        "type": "string",
                        "format": "",
                        "description": "Hash"
                    }
                },
                "additionalProperties": false
            },
            "EmailConfirmationResend": {
                "type": "object",
                "required": [
                    "email"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "",
                        "description": "Email to resend the confirmation for"
                    }
                },
                "additionalProperties": false
            },
            "EmailConfirmationResult": {
                "type": "object",
                "required": [
                    "emailAddress",
                    "emailType"
                ],
                "properties": {
                    "emailAddress": {
                        "type": "string",
                        "format": "",
                        "example": "you@example.org",
                        "description": "The e-mail address that was validated"
                    },
                    "emailType": {
                        "type": "string",
                        "format": "",
                        "example": "billing",
                        "description": "Type of e-mail that was validated, possible types can be main, billing or abuse"
                    }
                },
                "additionalProperties": false
            },
            "Error": {
                "type": "object",
                "required": [
                    "errorCode",
                    "errorMessage",
                    "errors"
                ],
                "properties": {
                    "errorCode": {
                        "type": "integer",
                        "format": "integer",
                        "example": 10001,
                        "description": "Error code"
                    },
                    "errorMessage": {
                        "type": "string",
                        "format": "",
                        "example": "Entity not found",
                        "description": "Error message"
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ErrorDetails"
                        },
                        "description": "Error details"
                    }
                },
                "additionalProperties": false
            },
            "ErrorDetails": {
                "type": "object",
                "required": [
                    "property",
                    "message"
                ],
                "properties": {
                    "property": {
                        "type": "string",
                        "format": "",
                        "example": "propertyName",
                        "description": "Property in which there is an error"
                    },
                    "message": {
                        "type": "string",
                        "format": "",
                        "example": "Error message",
                        "description": "Error message"
                    }
                },
                "additionalProperties": false
            },
            "FeatureModel": {
                "type": "object",
                "required": [
                    "geometry",
                    "properties"
                ],
                "properties": {
                    "geometry": {
                        "$ref": "#/components/schemas/GeometryModel"
                    },
                    "properties": {
                        "$ref": "#/components/schemas/PropertiesModel"
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalCapacityCommit": {
                "type": "object",
                "required": [
                    "location",
                    "commits"
                ],
                "properties": {
                    "location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexMetalLocation"
                            }
                        ],
                        "description": "Data center location",
                        "readOnly": true
                    },
                    "commits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlexMetalInstanceTypeCommit"
                        },
                        "description": "Committed capacity per instance type",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalInstanceType": {
                "type": "object",
                "required": [
                    "id",
                    "locationId",
                    "name",
                    "sockets",
                    "cores",
                    "memory",
                    "memoryType",
                    "storage",
                    "storageType",
                    "generationName"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Id of instance type",
                        "readOnly": true
                    },
                    "locationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "LocationId of instance type",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Name of instance type",
                        "readOnly": true
                    },
                    "sockets": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Sockets of instance type",
                        "readOnly": true
                    },
                    "cores": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Cores of instance type",
                        "readOnly": true
                    },
                    "memory": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Memory of instance type",
                        "readOnly": true
                    },
                    "memoryType": {
                        "type": "string",
                        "format": "",
                        "description": "Memory type of instance type",
                        "readOnly": true
                    },
                    "storage": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Storage of instance type",
                        "readOnly": true
                    },
                    "storageType": {
                        "type": "string",
                        "format": "",
                        "description": "Storage type of instance type",
                        "readOnly": true
                    },
                    "generationName": {
                        "type": "string",
                        "format": "",
                        "description": "Generation name of instance type",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalInstanceTypeCommit": {
                "type": "object",
                "required": [
                    "instanceType",
                    "capacity",
                    "inUse"
                ],
                "properties": {
                    "instanceType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexMetalInstanceType"
                            }
                        ],
                        "description": "Instance type",
                        "readOnly": true
                    },
                    "capacity": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Total commit of this instance type",
                        "readOnly": true
                    },
                    "inUse": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Instances in use",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalInstanceTypePartial": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "example": 128,
                        "description": "Instance type ID",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "example": "bm7.std.8",
                        "description": "Instance type name",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalKernelParam": {
                "type": "object",
                "required": [
                    "key",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "format": "",
                        "example": "siderolink.api",
                        "description": "Key of the kernel param"
                    },
                    "value": {
                        "type": "string",
                        "format": "",
                        "example": "url.to.omni",
                        "description": "Value of the kernel param"
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalLocation": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "shortName",
                    "displayName",
                    "countryId",
                    "countryName",
                    "countryShortName"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the location",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the location",
                        "readOnly": true
                    },
                    "shortName": {
                        "type": "string",
                        "format": "",
                        "description": "Short name of the location",
                        "readOnly": true
                    },
                    "displayName": {
                        "type": "string",
                        "format": "",
                        "description": "Display name of the location",
                        "readOnly": true
                    },
                    "countryId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Country ID of the location",
                        "readOnly": true
                    },
                    "countryName": {
                        "type": "string",
                        "format": "",
                        "description": "Country name of the Location",
                        "readOnly": true
                    },
                    "countryShortName": {
                        "type": "string",
                        "format": "",
                        "description": "Country short name of the Location",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalLocationPartial": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "example": 18,
                        "description": "ID of the location",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the location",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalOperatingSystemRequest": {
                "type": "object",
                "required": [
                    "slug"
                ],
                "properties": {
                    "slug": {
                        "type": "string",
                        "format": "",
                        "example": "ubuntu-2404-lts",
                        "description": "Identifier of the OS. Available operating systems can be obtained from /v3/operatingsystem. Use the `slug` field from the response."
                    },
                    "kernelParams": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlexMetalKernelParam"
                        },
                        "description": "Kernel params for the PXE stage of the OS installation. Most operating systems do not require these, but e.g. Talos does."
                    },
                    "partitions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlexMetalPartition"
                        },
                        "description": "Custom partitions for the OS installation. If not provided, the default partitioning scheme will be used."
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalOperatingSystemResponse": {
                "type": "object",
                "required": [
                    "slug"
                ],
                "properties": {
                    "slug": {
                        "type": "string",
                        "format": "",
                        "example": "ubuntu-2404-lts",
                        "description": "Identifier of the OS. Available operating systems can be obtained from /v3/operatingsystem. Use the `slug` field from the response."
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalPartition": {
                "type": "object",
                "required": [
                    "target",
                    "filesystem",
                    "size"
                ],
                "properties": {
                    "target": {
                        "type": "string",
                        "format": "",
                        "example": "/custom",
                        "description": "Mount point for the partition"
                    },
                    "filesystem": {
                        "type": "string",
                        "format": "",
                        "example": "ext4",
                        "description": "Type of filesystem to use for the target. Allowed: ext2, ext3, ext4, xfs"
                    },
                    "size": {
                        "type": "integer",
                        "format": "integer",
                        "example": 10240,
                        "description": "The size of the partition, in MB. Use -1 to indicate usage of the remaining space on the disk."
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalServer": {
                "type": "object",
                "required": [
                    "uuid",
                    "name",
                    "status",
                    "statusMessage",
                    "location",
                    "instanceType",
                    "os",
                    "ipAddresses",
                    "tags",
                    "createdAt",
                    "deliveredAt",
                    "releasedAt"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "",
                        "example": "019256ab-1554-73a7-b091-f024b0a724ea",
                        "description": "Server UUID.",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "example": "host.example.com",
                        "description": "Server host name."
                    },
                    "status": {
                        "type": "string",
                        "format": "",
                        "example": "delivered",
                        "description": "Server delivery status.<br /><li><ul>created</ul><ul>discovering</ul><ul>discovered</ul><ul>allocating</ul><ul>allocated</ul><ul>configuring_network</ul><ul>network_configured</ul><ul>provisioning</ul><ul>provisioned</ul><ul>delivered</ul><ul>failed</ul><ul>releasing</ul><ul>released</ul></li>",
                        "readOnly": true
                    },
                    "statusMessage": {
                        "type": "string",
                        "format": "",
                        "example": "OK",
                        "description": "Status message.",
                        "readOnly": true
                    },
                    "location": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexMetalLocationPartial"
                            }
                        ],
                        "description": "Server location.",
                        "readOnly": true
                    },
                    "instanceType": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexMetalInstanceTypePartial"
                            }
                        ],
                        "description": "Server instance type.",
                        "readOnly": true
                    },
                    "os": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexMetalOperatingSystemResponse"
                            }
                        ],
                        "description": "Server operating system.",
                        "readOnly": true
                    },
                    "ipAddresses": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FlexMetalServerIpAddress"
                        },
                        "description": "Server IP address details.",
                        "readOnly": true
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "",
                            "example": "my-tag"
                        },
                        "description": "Server tags.",
                        "readOnly": true
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "integer",
                        "example": 1728030905,
                        "description": "Server creation timestamp.",
                        "readOnly": true
                    },
                    "deliveredAt": {
                        "type": "integer",
                        "format": "integer",
                        "example": 1728031748,
                        "description": "Server delivery timestamp.",
                        "readOnly": true
                    },
                    "releasedAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Server release timestamp.",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalServerIpAddress": {
                "type": "object",
                "required": [
                    "ipAddress"
                ],
                "properties": {
                    "ipAddress": {
                        "type": "string",
                        "format": "",
                        "example": "1.2.3.4",
                        "description": "Server IP address.",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalServerRequest": {
                "type": "object",
                "required": [
                    "name",
                    "location",
                    "instanceType",
                    "os",
                    "sshKey"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "",
                        "example": "host.example.com",
                        "description": "Server name or hostname, depending on the chosen OS. E.g. Talos requires a hostname but regular Linux OSs work with either."
                    },
                    "location": {
                        "type": "string",
                        "format": "",
                        "description": "Server location. Available locations can be obtained from /v3/flexMetal/location. Use the `name` field from the response."
                    },
                    "instanceType": {
                        "type": "string",
                        "format": "",
                        "example": "bm7.std.8",
                        "description": "Server instance type. Available instance types can be obtained from /v3/flexMetal/location/{locationId}}/instanceTypes. Use the `name` field from the response."
                    },
                    "os": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexMetalOperatingSystemRequest"
                            }
                        ],
                        "description": "Server operating system."
                    },
                    "sshKey": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "",
                            "example": "ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBHo8IaPkQ6UnDZvi4F4RBSouRa6Gtysdg2EF+SIXheVF2SGBQ2uH7RfDjXRfvq4VpHJrKYs4kWfNoHQg8ZG6PH4= ecdsa-key-20240131"
                        },
                        "description": "A list of SSH keys. You can either supply SSH key UUIDs from stored objects in /v3/sshKey or provide public keys directly. SSH keys are installed for the root user."
                    },
                    "postInstallScript": {
                        "type": "string",
                        "format": "",
                        "example": "#!/bin/bash\necho 'Hello world!' > /root/blah.txt",
                        "description": "Post install script. A shell script (e.g. bash) that will be executed after your OS is installed. Currently only supported for Linux based operating systems."
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "",
                            "example": "my-tag"
                        },
                        "description": "A list of tags. There is a maximum of 60 tags per server. Each tag must adhere to this pattern: ^[A-Za-z0-9_:-]{1,64}$"
                    }
                },
                "additionalProperties": false,
                "description": "Request object for creating a new Flex Metal server"
            },
            "FlexMetalServerRootPassword": {
                "type": "object",
                "required": [
                    "rootPassword"
                ],
                "properties": {
                    "rootPassword": {
                        "type": "string",
                        "format": "",
                        "description": "Server root password."
                    }
                },
                "additionalProperties": false
            },
            "FlexMetalTag": {
                "type": "object",
                "required": [
                    "tag",
                    "resources"
                ],
                "properties": {
                    "tag": {
                        "type": "string",
                        "format": "",
                        "example": "my-tag",
                        "description": "The tag name"
                    },
                    "resources": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexMetalTagSummary"
                            }
                        ],
                        "description": "A list of resources that use this tag"
                    }
                },
                "additionalProperties": false,
                "description": "A Flex Metal tag"
            },
            "FlexMetalTagRenameRequest": {
                "type": "object",
                "required": [
                    "tag"
                ],
                "properties": {
                    "tag": {
                        "type": "string",
                        "format": "",
                        "example": "new-tag",
                        "description": "The new tag name. It must adhere to this pattern: ^[A-Za-z0-9_:-]{1,64}$"
                    }
                },
                "additionalProperties": false,
                "description": "Request object for renaming an existing Flex Metal tag"
            },
            "FlexMetalTagRenameResponse": {
                "type": "object",
                "required": [
                    "oldTag",
                    "newTag"
                ],
                "properties": {
                    "oldTag": {
                        "type": "string",
                        "format": "",
                        "example": "old-tag",
                        "description": "The old tag name."
                    },
                    "newTag": {
                        "type": "string",
                        "format": "",
                        "example": "new-tag",
                        "description": "The new tag name. It must adhere to this pattern: ^[A-Za-z0-9_:-]{1,64}$"
                    }
                },
                "additionalProperties": false,
                "description": "Response object for renaming an existing Flex Metal tag"
            },
            "FlexMetalTagResourceUsage": {
                "type": "object",
                "required": [
                    "count"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "integer",
                        "example": 1,
                        "description": "The amount of resources of this type that use this tag."
                    }
                },
                "additionalProperties": false,
                "description": "Tag resource usage"
            },
            "FlexMetalTagSummary": {
                "type": "object",
                "required": [
                    "count",
                    "flexMetalServers"
                ],
                "properties": {
                    "count": {
                        "type": "integer",
                        "format": "integer",
                        "example": 1,
                        "description": "The total number of resources that use this tag"
                    },
                    "flexMetalServers": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FlexMetalTagResourceUsage"
                            }
                        ],
                        "description": "A summary of tag usage for the FlexMetalServer resource type"
                    }
                },
                "additionalProperties": false,
                "description": "A Flex Metal tag"
            },
            "GeometryModel": {
                "type": "object",
                "required": [
                    "type",
                    "coordinates"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": "",
                        "description": "The type of the geometry"
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "float"
                        },
                        "description": "The geographic coordinates"
                    }
                },
                "additionalProperties": false
            },
            "Health": {
                "type": "object",
                "required": [
                    "status"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "format": "",
                        "description": "Status - either OK or FAIL"
                    }
                },
                "additionalProperties": false
            },
            "Host": {
                "type": "object",
                "required": [
                    "id",
                    "userId",
                    "serverId",
                    "serverName",
                    "serverType",
                    "liveHostName",
                    "isVirtual",
                    "category",
                    "osId",
                    "locationId",
                    "dcLocationId",
                    "instanceType",
                    "fleetId",
                    "newFleetId",
                    "fleetAssociatedSince",
                    "rackName",
                    "dateStart",
                    "dateEnd",
                    "dateCancelled",
                    "dateEndContract",
                    "contractPeriod",
                    "extendPeriod",
                    "cancellationPeriod",
                    "purchaseOrder",
                    "paymentTerm",
                    "pricePerMonth",
                    "pricePerTbOveruse",
                    "currencyId",
                    "bandwidthBillingType",
                    "bandwidthContractual",
                    "ipAddress",
                    "brand",
                    "model",
                    "numCpu",
                    "cpuInfo",
                    "cpuType",
                    "cpuLoad",
                    "cpu",
                    "memUsed",
                    "memMax",
                    "memFree",
                    "disk",
                    "memory",
                    "isReserve",
                    "serviceTag",
                    "isODP",
                    "fmOrderId",
                    "installStatus",
                    "status",
                    "trafficSum",
                    "uplinks",
                    "freeIncomingTraffic",
                    "outgoingTrafficSum",
                    "incomingTrafficSum"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of this host",
                        "readOnly": true
                    },
                    "userId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the user who owns this server",
                        "readOnly": true
                    },
                    "serverId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the physical machine",
                        "readOnly": true
                    },
                    "serverName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the physical machine",
                        "readOnly": true
                    },
                    "serverType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The type of the server:\n* 1: Bare metal server\n* 2: Flex metal server\n* 3: Virtual machine",
                        "readOnly": true
                    },
                    "projectName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the project for the host"
                    },
                    "clientServerName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the server defined by client"
                    },
                    "clientState": {
                        "type": "string",
                        "format": "",
                        "description": "Client statement for the host"
                    },
                    "liveHostName": {
                        "type": "string",
                        "format": "",
                        "description": "The host name",
                        "readOnly": true
                    },
                    "isVirtual": {
                        "type": "integer",
                        "format": "integer",
                        "description": "0 if this is a bare metal server, 1 if it's a VM. Use `serverType` instead",
                        "readOnly": true,
                        "deprecated": true
                    },
                    "category": {
                        "type": "string",
                        "format": "",
                        "description": "Host category. Normally 'Dedicated Game Servers' or 'Dedicated Servers', but can be 'Broken' if the server is in a degraded state",
                        "readOnly": true
                    },
                    "osId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Operating system ID, must be one of [`GET /v3/operatingsystem`](all#/OperatingSystem/getOperatingsystems)",
                        "readOnly": true
                    },
                    "locationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Legacy location ID (not used for ODP)",
                        "readOnly": true
                    },
                    "dcLocationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Datacenter location ID. Points to one of [`GET /v3/cloud/dcLocation`](#/Cloud/getCloudDcLocations)",
                        "readOnly": true
                    },
                    "instanceType": {
                        "type": "string",
                        "format": "",
                        "description": "The instance type of this server, which is one of [`GET /v3/host/instanceType`](#/Host/getHostInstanceTypes) for a bare metal, or one of\n[`GET /v3/cloud/instanceType`](#/Cloud/getCloudInstanceTypes) for a virtual machine",
                        "readOnly": true
                    },
                    "fleetId": {
                        "type": "string",
                        "format": "",
                        "description": "The fleet ID, if this host has been assigned to a fleet\nIf `0`, the host has not been assigned to a fleet, otherwise, the fleet is assigned to this host and the host can serve application instances for that fleet.",
                        "readOnly": true
                    },
                    "newFleetId": {
                        "type": "string",
                        "format": "",
                        "description": "The ID of a new fleet that is to be assigned to this host after performing a bulkReserve operation at [`POST /v3/fleet/host/bulkReserve`](#/Fleet/createFleetHostBulkReserve)",
                        "nullable": true,
                        "readOnly": true
                    },
                    "fleetAssociatedSince": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Unix timestamp when fleet assigned to the host",
                        "readOnly": true
                    },
                    "rackName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the rack the host is located",
                        "readOnly": true
                    },
                    "dateStart": {
                        "type": "string",
                        "format": "",
                        "description": "The date at which this host became active",
                        "readOnly": true
                    },
                    "dateEnd": {
                        "type": "string",
                        "format": "",
                        "description": "The date at which this host will expire",
                        "readOnly": true
                    },
                    "dateCancelled": {
                        "type": "string",
                        "format": "",
                        "description": "The date at which this host was cancelled",
                        "readOnly": true
                    },
                    "dateEndContract": {
                        "type": "string",
                        "format": "",
                        "description": "The date at which the contract ends (if applicable)",
                        "readOnly": true
                    },
                    "contractPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The contract period in months",
                        "readOnly": true
                    },
                    "extendPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The service extend period in months",
                        "readOnly": true
                    },
                    "cancellationPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The cancellation period in months",
                        "readOnly": true
                    },
                    "purchaseOrder": {
                        "type": "string",
                        "format": "",
                        "description": "Purchase order, if one has been supplied via our billing department",
                        "readOnly": true
                    },
                    "paymentTerm": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The payment term in days (how many days are invoices generated before dateEnd)",
                        "readOnly": true
                    },
                    "pricePerMonth": {
                        "type": "string",
                        "format": "",
                        "description": "The price of this host per month in cents (see `currencyId` for currency)",
                        "readOnly": true
                    },
                    "pricePerTbOveruse": {
                        "type": "string",
                        "format": "",
                        "description": "The price of traffic overuse in cents (per TB) (see `currencyId` for currency)",
                        "readOnly": true
                    },
                    "currencyId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The currency of the `pricePerMonth` field:\n* 0: EURO\n* 1: USD\n* 9: YEN",
                        "readOnly": true
                    },
                    "bandwidthBillingType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The bandwidth billing method for this service:\n* 1: unmetered connection\n* 2: measured in TB per month\n* 3: measured in mbit 95th percentile",
                        "readOnly": true
                    },
                    "bandwidthContractual": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The contractual maximum bandwidth usage value. In GB if bandwidthBillingType equals `2`, in mbit otherwise",
                        "readOnly": true
                    },
                    "ipAddress": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HostIP"
                        },
                        "description": "All IP addresses assigned to this host",
                        "readOnly": true
                    },
                    "brand": {
                        "type": "string",
                        "format": "",
                        "description": "The server manufacturer brand name",
                        "readOnly": true
                    },
                    "model": {
                        "type": "string",
                        "format": "",
                        "description": "The model of the server",
                        "readOnly": true
                    },
                    "numCpu": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Number of CPUs in this host",
                        "readOnly": true
                    },
                    "cpuInfo": {
                        "type": "string",
                        "format": "",
                        "readOnly": true
                    },
                    "cpuType": {
                        "type": "string",
                        "format": "",
                        "readOnly": true
                    },
                    "cpuLoad": {
                        "type": "number",
                        "format": "float",
                        "description": "Percentage of cpu used across all cores",
                        "readOnly": true
                    },
                    "cpu": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HostCpu"
                            }
                        ],
                        "readOnly": true
                    },
                    "memUsed": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The amount of memory that is used by the host (in megabytes)",
                        "readOnly": true
                    },
                    "memMax": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The amount of memory that is available on the host (in megabytes)",
                        "readOnly": true
                    },
                    "memFree": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The amount of free memory that is available on the host (in megabytes)",
                        "readOnly": true
                    },
                    "disk": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HostDisk"
                        },
                        "readOnly": true
                    },
                    "memory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HostMemory"
                        },
                        "readOnly": true
                    },
                    "isReserve": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If the host is reserved for a fleet isReserve set to 1",
                        "readOnly": true
                    },
                    "labels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Label"
                        },
                        "description": "Custom key/value pairs that can be used for host"
                    },
                    "serviceTag": {
                        "type": "string",
                        "format": "",
                        "description": "The service tag of the host",
                        "readOnly": true
                    },
                    "isODP": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If the host is available for game hosting platform isODP set to 1",
                        "readOnly": true
                    },
                    "fmOrderId": {
                        "type": "string",
                        "format": "",
                        "description": "ID of Flex Metal order if this is a flex metal server",
                        "nullable": true,
                        "readOnly": true
                    },
                    "installStatus": {
                        "type": "string",
                        "format": "",
                        "description": "Status of server auto install if it was started by one. (created / installing / finished / failed)",
                        "nullable": true,
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "format": "",
                        "description": "Whether the host is running or not",
                        "readOnly": true
                    },
                    "uptime": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The uptime of the host. Read-only. Only provided if the server checked-in recently"
                    },
                    "trafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Monthly traffic of all incoming and outgoing bandwidth in GB or Mbit depending on host configuration",
                        "readOnly": true
                    },
                    "uplinks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HostUplink"
                        },
                        "description": "A list of uplinks attached to this host",
                        "readOnly": true
                    },
                    "freeIncomingTraffic": {
                        "type": "boolean",
                        "description": "Whether the host has free incoming traffic or not",
                        "readOnly": true
                    },
                    "outgoingTrafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The outgoing traffic (Mbit or GB)",
                        "readOnly": true
                    },
                    "incomingTrafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The incoming traffic (Mbit or GB)",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "HostCpu": {
                "type": "object",
                "required": [
                    "socket",
                    "cores",
                    "threads",
                    "info",
                    "type"
                ],
                "properties": {
                    "socket": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Number of populated CPU sockets",
                        "readOnly": true
                    },
                    "cores": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Total number of cores (sum of all CPU cores)",
                        "readOnly": true
                    },
                    "threads": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Total number of threads (sum of all CPU threads).",
                        "readOnly": true
                    },
                    "info": {
                        "type": "string",
                        "format": "",
                        "description": "CPU information",
                        "readOnly": true
                    },
                    "type": {
                        "type": "string",
                        "format": "",
                        "description": "CPU type",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "HostDisk": {
                "type": "object",
                "required": [
                    "diskType",
                    "diskMedium",
                    "model",
                    "product",
                    "diskSerial",
                    "firmwareVersion",
                    "rotationRate",
                    "sectorSizeLogical",
                    "sectorSizePhysical",
                    "size"
                ],
                "properties": {
                    "diskType": {
                        "type": "string",
                        "format": "",
                        "description": "The type of disk",
                        "readOnly": true
                    },
                    "diskMedium": {
                        "type": "string",
                        "format": "",
                        "description": "The medium of this disk",
                        "readOnly": true
                    },
                    "model": {
                        "type": "string",
                        "format": "",
                        "description": "The model name of this disk",
                        "readOnly": true
                    },
                    "product": {
                        "type": "string",
                        "format": "",
                        "description": "The product string of this disk",
                        "readOnly": true
                    },
                    "diskSerial": {
                        "type": "string",
                        "format": "",
                        "description": "The serial number of this disk",
                        "readOnly": true
                    },
                    "firmwareVersion": {
                        "type": "string",
                        "format": "",
                        "description": "Firmware version",
                        "readOnly": true
                    },
                    "rotationRate": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Rotation rate (does not apply to SSD)",
                        "readOnly": true
                    },
                    "sectorSizeLogical": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Logical sector size",
                        "readOnly": true
                    },
                    "sectorSizePhysical": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Physical sector size",
                        "readOnly": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "integer",
                        "description": "In bytes",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "HostIP": {
                "type": "object",
                "required": [
                    "ipAddress",
                    "version",
                    "type",
                    "private",
                    "interface",
                    "macAddress",
                    "rDns",
                    "vlanId",
                    "gateway",
                    "netmask",
                    "prefix"
                ],
                "properties": {
                    "ipAddress": {
                        "type": "string",
                        "format": "",
                        "description": "Host IP address",
                        "readOnly": true
                    },
                    "version": {
                        "type": "integer",
                        "format": "integer",
                        "description": "IP version, possible values can be 4 or 6",
                        "readOnly": true
                    },
                    "type": {
                        "type": "integer",
                        "format": "integer",
                        "description": "IP type:\n1) normal,\n2) KVM,\n253) VRRP1,\n254) VRRP2,\n255) gateway",
                        "readOnly": true
                    },
                    "private": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Private IP (1) or public IP (0)",
                        "readOnly": true
                    },
                    "interface": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the interface (0-7)",
                        "readOnly": true
                    },
                    "macAddress": {
                        "type": "string",
                        "format": "",
                        "description": "MAC address of the interface",
                        "readOnly": true
                    },
                    "rDns": {
                        "type": "string",
                        "format": "",
                        "description": "RDNS of the interface",
                        "readOnly": true
                    },
                    "vlanId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID for the VLAN",
                        "nullable": true,
                        "readOnly": true
                    },
                    "gateway": {
                        "type": "string",
                        "format": "",
                        "description": "Interface gateway",
                        "nullable": true,
                        "readOnly": true
                    },
                    "netmask": {
                        "type": "string",
                        "format": "",
                        "description": "Interface netmask",
                        "nullable": true,
                        "readOnly": true
                    },
                    "prefix": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Interface prefix",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "HostMemory": {
                "type": "object",
                "required": [
                    "brand",
                    "model",
                    "size",
                    "speed",
                    "ecc",
                    "memoryBank",
                    "memoryType",
                    "memorySlot",
                    "memorySerial"
                ],
                "properties": {
                    "brand": {
                        "type": "string",
                        "format": "",
                        "description": "The brand name",
                        "readOnly": true
                    },
                    "model": {
                        "type": "string",
                        "format": "",
                        "description": "The model name",
                        "readOnly": true
                    },
                    "size": {
                        "type": "integer",
                        "format": "integer",
                        "description": "In bytes",
                        "readOnly": true
                    },
                    "speed": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The speed this memory module runs at",
                        "readOnly": true
                    },
                    "ecc": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Set to 1 if ecc is supported and enabled",
                        "readOnly": true
                    },
                    "memoryBank": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The bank this module sits in",
                        "readOnly": true
                    },
                    "memoryType": {
                        "type": "string",
                        "format": "",
                        "description": "The type of memory module",
                        "readOnly": true
                    },
                    "memorySlot": {
                        "type": "string",
                        "format": "",
                        "description": "The slot this module sits in",
                        "readOnly": true
                    },
                    "memorySerial": {
                        "type": "string",
                        "format": "",
                        "description": "The serial number of this module",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "HostSummary": {
                "type": "object",
                "required": [
                    "id",
                    "serverId",
                    "serverName",
                    "serverType",
                    "liveHostName",
                    "isVirtual",
                    "category",
                    "osId",
                    "locationId",
                    "dcLocationId",
                    "instanceType",
                    "fleetId",
                    "newFleetId",
                    "fleetAssociatedSince",
                    "rackName",
                    "dateStart",
                    "dateEnd",
                    "dateCancelled",
                    "dateEndContract",
                    "contractPeriod",
                    "extendPeriod",
                    "cancellationPeriod",
                    "purchaseOrder",
                    "paymentTerm",
                    "pricePerMonth",
                    "pricePerTbOveruse",
                    "currencyId",
                    "bandwidthBillingType",
                    "bandwidthContractual",
                    "brand",
                    "model",
                    "isReserve",
                    "serviceTag",
                    "isODP",
                    "fmOrderId",
                    "installStatus",
                    "status",
                    "trafficSum",
                    "freeIncomingTraffic",
                    "outgoingTrafficSum",
                    "incomingTrafficSum"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of this host",
                        "readOnly": true
                    },
                    "serverId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the physical machine",
                        "readOnly": true
                    },
                    "serverName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the physical machine",
                        "readOnly": true
                    },
                    "serverType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The type of the server:\n* 1: Bare metal server\n* 2: Flex metal server\n* 3: Virtual machine",
                        "readOnly": true
                    },
                    "projectName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the project for the host"
                    },
                    "clientServerName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the server defined by client"
                    },
                    "clientState": {
                        "type": "string",
                        "format": "",
                        "description": "Client statement for the host"
                    },
                    "liveHostName": {
                        "type": "string",
                        "format": "",
                        "description": "The host name",
                        "readOnly": true
                    },
                    "isVirtual": {
                        "type": "integer",
                        "format": "integer",
                        "description": "0 if this is a bare metal server, 1 if it's a VM. Use `serverType` instead",
                        "readOnly": true,
                        "deprecated": true
                    },
                    "category": {
                        "type": "string",
                        "format": "",
                        "description": "Host category. Normally 'Dedicated Game Servers' or 'Dedicated Servers', but can be 'Broken' if the server is in a degraded state",
                        "readOnly": true
                    },
                    "osId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Operating system ID, must be one of [`GET /v3/operatingsystem`](all#/OperatingSystem/getOperatingsystems)",
                        "readOnly": true
                    },
                    "locationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Legacy location ID (not used for ODP)",
                        "readOnly": true
                    },
                    "dcLocationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Datacenter location ID. Points to one of [`GET /v3/cloud/dcLocation`](#/Cloud/getCloudDcLocations)",
                        "readOnly": true
                    },
                    "instanceType": {
                        "type": "string",
                        "format": "",
                        "description": "The instance type of this server, which is one of [`GET /v3/host/instanceType`](#/Host/getHostInstanceTypes) for a bare metal, or one of\n[`GET /v3/cloud/instanceType`](#/Cloud/getCloudInstanceTypes) for a virtual machine",
                        "readOnly": true
                    },
                    "fleetId": {
                        "type": "string",
                        "format": "",
                        "description": "The fleet ID, if this host has been assigned to a fleet\nIf `0`, the host has not been assigned to a fleet, otherwise, the fleet is assigned to this host and the host can serve application instances for that fleet.",
                        "readOnly": true
                    },
                    "newFleetId": {
                        "type": "string",
                        "format": "",
                        "description": "The ID of a new fleet that is to be assigned to this host after performing a bulkReserve operation at [`POST /v3/fleet/host/bulkReserve`](#/Fleet/createFleetHostBulkReserve)",
                        "nullable": true,
                        "readOnly": true
                    },
                    "fleetAssociatedSince": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Unix timestamp when fleet assigned to the host",
                        "readOnly": true
                    },
                    "rackName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the rack the host is located",
                        "readOnly": true
                    },
                    "dateStart": {
                        "type": "string",
                        "format": "",
                        "description": "The date at which this host became active",
                        "readOnly": true
                    },
                    "dateEnd": {
                        "type": "string",
                        "format": "",
                        "description": "The date at which this host will expire",
                        "readOnly": true
                    },
                    "dateCancelled": {
                        "type": "string",
                        "format": "",
                        "description": "The date at which this host was cancelled",
                        "readOnly": true
                    },
                    "dateEndContract": {
                        "type": "string",
                        "format": "",
                        "description": "The date at which the contract ends (if applicable)",
                        "readOnly": true
                    },
                    "contractPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The contract period in months",
                        "readOnly": true
                    },
                    "extendPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The service extend period in months",
                        "readOnly": true
                    },
                    "cancellationPeriod": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The cancellation period in months",
                        "readOnly": true
                    },
                    "purchaseOrder": {
                        "type": "string",
                        "format": "",
                        "description": "Purchase order, if one has been supplied via our billing department",
                        "readOnly": true
                    },
                    "paymentTerm": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The payment term in days (how many days are invoices generated before dateEnd)",
                        "readOnly": true
                    },
                    "pricePerMonth": {
                        "type": "string",
                        "format": "",
                        "description": "The price of this host per month in cents (see `currencyId` for currency)",
                        "readOnly": true
                    },
                    "pricePerTbOveruse": {
                        "type": "string",
                        "format": "",
                        "description": "The price of traffic overuse in cents (per TB) (see `currencyId` for currency)",
                        "readOnly": true
                    },
                    "currencyId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The currency of the `pricePerMonth` field:\n* 0: EURO\n* 1: USD\n* 9: YEN",
                        "readOnly": true
                    },
                    "bandwidthBillingType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The bandwidth billing method for this service:\n* 1: unmetered connection\n* 2: measured in TB per month\n* 3: measured in mbit 95th percentile",
                        "readOnly": true
                    },
                    "bandwidthContractual": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The contractual maximum bandwidth usage value. In GB if bandwidthBillingType equals `2`, in mbit otherwise",
                        "readOnly": true
                    },
                    "brand": {
                        "type": "string",
                        "format": "",
                        "description": "The server manufacturer brand name",
                        "readOnly": true
                    },
                    "model": {
                        "type": "string",
                        "format": "",
                        "description": "The model of the server",
                        "readOnly": true
                    },
                    "isReserve": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If the host is reserved for a fleet isReserve set to 1",
                        "readOnly": true
                    },
                    "serviceTag": {
                        "type": "string",
                        "format": "",
                        "description": "The service tag of the host",
                        "readOnly": true
                    },
                    "isODP": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If the host is available for game hosting platform isODP set to 1",
                        "readOnly": true
                    },
                    "fmOrderId": {
                        "type": "string",
                        "format": "",
                        "description": "ID of Flex Metal order if this is a flex metal server",
                        "nullable": true,
                        "readOnly": true
                    },
                    "installStatus": {
                        "type": "string",
                        "format": "",
                        "description": "Status of server auto install if it was started by one. (created / installing / finished / failed)",
                        "nullable": true,
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "format": "",
                        "description": "Whether the host is running or not",
                        "readOnly": true
                    },
                    "uptime": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The uptime of the host. Read-only. Only provided if the server checked-in recently"
                    },
                    "trafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Monthly traffic of all incoming and outgoing bandwidth in GB or Mbit depending on host configuration",
                        "readOnly": true
                    },
                    "freeIncomingTraffic": {
                        "type": "boolean",
                        "description": "Whether the host has free incoming traffic or not",
                        "readOnly": true
                    },
                    "outgoingTrafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The outgoing traffic (Mbit or GB)",
                        "readOnly": true
                    },
                    "incomingTrafficSum": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The incoming traffic (Mbit or GB)",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "HostUplink": {
                "type": "object",
                "required": [
                    "uplinkId",
                    "aggregate"
                ],
                "properties": {
                    "uplinkId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The cacti ID of the uplink",
                        "readOnly": true
                    },
                    "aggregate": {
                        "type": "boolean",
                        "description": "True if the uplink is an aggregated uplink, false if it is not aggregated",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "InitialAccount": {
                "type": "object",
                "required": [
                    "id",
                    "username",
                    "email",
                    "firstName",
                    "lastName",
                    "newsletter",
                    "agreeToc",
                    "agreeAup",
                    "agreeDpa"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "User ID"
                    },
                    "username": {
                        "type": "string",
                        "format": "",
                        "description": "User Name"
                    },
                    "email": {
                        "type": "string",
                        "format": "",
                        "description": "Email"
                    },
                    "firstName": {
                        "type": "string",
                        "format": "",
                        "description": "First name."
                    },
                    "lastName": {
                        "type": "string",
                        "format": "",
                        "description": "Last name."
                    },
                    "newsletter": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not newsletter is subscribed to"
                    },
                    "agreeToc": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Terms and Conditions are agreed to. Cannot be changed after agreeing."
                    },
                    "agreeAup": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Acceptable Use Policy is agreed to. Cannot be changed after agreeing."
                    },
                    "agreeDpa": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not Data Processing Agreement is agreed to. Cannot be changed after agreeing."
                    }
                },
                "additionalProperties": false
            },
            "Invoice": {
                "type": "object",
                "required": [
                    "id",
                    "creationDate",
                    "dueDate",
                    "invoiceNumber",
                    "invoiceHash",
                    "description",
                    "currency",
                    "currencySign",
                    "amountIncVAT",
                    "amountExclVAT",
                    "paymentStatus",
                    "paymentDate",
                    "isCredit",
                    "remainingAmount",
                    "totalPaidAmount"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "",
                        "description": "The ID of the invoice",
                        "readOnly": true
                    },
                    "creationDate": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The date the invoice was created",
                        "readOnly": true
                    },
                    "dueDate": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The due date of the invoice",
                        "readOnly": true
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "format": "",
                        "description": "The number of the invoice",
                        "readOnly": true
                    },
                    "invoiceHash": {
                        "type": "string",
                        "format": "",
                        "description": "A unique hash for this invoice",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "format": "",
                        "description": "The description of the invoice"
                    },
                    "currency": {
                        "type": "string",
                        "format": "",
                        "description": "The currency that is being used"
                    },
                    "currencySign": {
                        "type": "string",
                        "format": "",
                        "description": "The currency sign that is being used"
                    },
                    "amountIncVAT": {
                        "type": "string",
                        "format": "",
                        "description": "The amount of the invoice with VAT in cents"
                    },
                    "amountExclVAT": {
                        "type": "string",
                        "format": "",
                        "description": "The amount of the invoice without VAT in cents"
                    },
                    "paymentStatus": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The payment status"
                    },
                    "paymentDate": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The timestamp that the invoice was paid, if paid"
                    },
                    "isCredit": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If this field is 1 it means that invoice is a credit invoice"
                    },
                    "remainingAmount": {
                        "type": "string",
                        "format": "",
                        "description": "The remaining amount of invoice"
                    },
                    "totalPaidAmount": {
                        "type": "string",
                        "format": "",
                        "description": "The total paid amount of invoice"
                    }
                },
                "additionalProperties": false
            },
            "InvoiceClientDetails": {
                "type": "object",
                "required": [
                    "fullName",
                    "companyName",
                    "email",
                    "address",
                    "zip",
                    "city",
                    "country",
                    "vatNumber",
                    "iban",
                    "bic"
                ],
                "properties": {
                    "fullName": {
                        "type": "string",
                        "format": "",
                        "description": "Full name of the client",
                        "readOnly": true
                    },
                    "companyName": {
                        "type": "string",
                        "format": "",
                        "description": "Name of the company of the client",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "",
                        "description": "Client email",
                        "readOnly": true
                    },
                    "address": {
                        "type": "string",
                        "format": "",
                        "description": "Client address",
                        "readOnly": true
                    },
                    "zip": {
                        "type": "string",
                        "format": "",
                        "description": "Client address ZIP code",
                        "readOnly": true
                    },
                    "city": {
                        "type": "string",
                        "format": "",
                        "description": "Client address city",
                        "readOnly": true
                    },
                    "country": {
                        "type": "string",
                        "format": "",
                        "description": "Client address country",
                        "readOnly": true
                    },
                    "vatNumber": {
                        "type": "string",
                        "format": "",
                        "description": "Client VAT number",
                        "readOnly": true
                    },
                    "iban": {
                        "type": "string",
                        "format": "",
                        "description": "Client bank account IBAN number",
                        "readOnly": true
                    },
                    "bic": {
                        "type": "string",
                        "format": "",
                        "description": "Client bank account BIC number",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "InvoiceCompanyDetails": {
                "type": "object",
                "required": [
                    "name",
                    "address",
                    "zip",
                    "city",
                    "country",
                    "phone",
                    "email",
                    "url",
                    "iban",
                    "bic"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Company name",
                        "readOnly": true
                    },
                    "address": {
                        "type": "string",
                        "format": "",
                        "description": "Company address",
                        "readOnly": true
                    },
                    "zip": {
                        "type": "string",
                        "format": "",
                        "description": "Company ZIP code",
                        "readOnly": true
                    },
                    "city": {
                        "type": "string",
                        "format": "",
                        "description": "Company address city",
                        "readOnly": true
                    },
                    "country": {
                        "type": "string",
                        "format": "",
                        "description": "Company country",
                        "readOnly": true
                    },
                    "phone": {
                        "type": "string",
                        "format": "",
                        "description": "Company phone",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "",
                        "description": "Company phone email address",
                        "readOnly": true
                    },
                    "url": {
                        "type": "string",
                        "format": "",
                        "description": "Company website URL",
                        "readOnly": true
                    },
                    "iban": {
                        "type": "string",
                        "format": "",
                        "description": "Company bank account IBAN number",
                        "readOnly": true
                    },
                    "bic": {
                        "type": "string",
                        "format": "",
                        "description": "Company bank account BIC number",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "InvoiceDetails": {
                "type": "object",
                "required": [
                    "id",
                    "invoiceNumber",
                    "invoiceHash",
                    "clientNumber",
                    "creationDate",
                    "dueDate",
                    "paymentStatus",
                    "paymentDate",
                    "isCredit",
                    "paymentTerm",
                    "currency",
                    "currencySign",
                    "vatPercentage",
                    "vatAmount",
                    "amountIncVat",
                    "amountExclVat",
                    "items",
                    "clientDetails",
                    "companyDetails"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the invoice",
                        "readOnly": true
                    },
                    "invoiceNumber": {
                        "type": "string",
                        "format": "",
                        "description": "Invoice number",
                        "readOnly": true
                    },
                    "invoiceHash": {
                        "type": "string",
                        "format": "",
                        "description": "A unique hash for this invoice",
                        "readOnly": true
                    },
                    "clientNumber": {
                        "type": "string",
                        "format": "",
                        "description": "Client number",
                        "readOnly": true
                    },
                    "creationDate": {
                        "type": "string",
                        "format": "",
                        "description": "The date the invoice was created",
                        "readOnly": true
                    },
                    "dueDate": {
                        "type": "string",
                        "format": "",
                        "description": "The due date of the invoice",
                        "readOnly": true
                    },
                    "paymentStatus": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not the invoice was paid",
                        "readOnly": true
                    },
                    "paymentDate": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The timestamp that the invoice was paid, if paid"
                    },
                    "isCredit": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If this field is 1 it means that invoice is a credit invoice"
                    },
                    "paymentTerm": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The invoice must be paid in the given amount of time (days)",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the currency that is being used",
                        "readOnly": true
                    },
                    "currencySign": {
                        "type": "string",
                        "format": "",
                        "description": "The sign of the currency that is being used",
                        "readOnly": true
                    },
                    "vatPercentage": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Percentage of VAT applied",
                        "readOnly": true
                    },
                    "vatAmount": {
                        "type": "string",
                        "format": "",
                        "description": "Amount of VAT to pay in cents",
                        "readOnly": true
                    },
                    "amountIncVat": {
                        "type": "string",
                        "format": "",
                        "description": "The amount of the invoice with VAT included in cents",
                        "readOnly": true
                    },
                    "amountExclVat": {
                        "type": "string",
                        "format": "",
                        "description": "The amount of the invoice without VAT in cents",
                        "readOnly": true
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InvoiceItem"
                        },
                        "description": "Invoice items",
                        "readOnly": true
                    },
                    "clientDetails": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceClientDetails"
                            }
                        ],
                        "description": "Client details",
                        "readOnly": true
                    },
                    "companyDetails": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InvoiceCompanyDetails"
                            }
                        ],
                        "description": "Company details",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "InvoiceItem": {
                "type": "object",
                "required": [
                    "orderId",
                    "description",
                    "periodFrom",
                    "periodTo",
                    "remarks",
                    "quantity",
                    "setupCosts",
                    "unitPrice",
                    "vatPercentage",
                    "vatAmount",
                    "amountIncVat",
                    "amountExclVat"
                ],
                "properties": {
                    "orderId": {
                        "type": "string",
                        "format": "",
                        "description": "Purchase order ID of the item",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "format": "",
                        "description": "Invoice item description",
                        "readOnly": true
                    },
                    "periodFrom": {
                        "type": "string",
                        "format": "",
                        "description": "Invoiced period start for the item",
                        "readOnly": true
                    },
                    "periodTo": {
                        "type": "string",
                        "format": "",
                        "description": "Invoiced period end for the item",
                        "readOnly": true
                    },
                    "remarks": {
                        "type": "string",
                        "format": "",
                        "description": "Invoice item remarks",
                        "readOnly": true
                    },
                    "quantity": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Invoice item quantity",
                        "readOnly": true
                    },
                    "setupCosts": {
                        "type": "string",
                        "format": "",
                        "description": "Invoice item setup costs in cents",
                        "readOnly": true
                    },
                    "unitPrice": {
                        "type": "string",
                        "format": "",
                        "description": "Price of one unit of invoice item in cents",
                        "readOnly": true
                    },
                    "vatPercentage": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Percentage of VAT applied",
                        "readOnly": true
                    },
                    "vatAmount": {
                        "type": "string",
                        "format": "",
                        "description": "Amount of VAT to pay in cents",
                        "readOnly": true
                    },
                    "amountIncVat": {
                        "type": "string",
                        "format": "",
                        "description": "The amount of the invoice with VAT included in cents",
                        "readOnly": true
                    },
                    "amountExclVat": {
                        "type": "string",
                        "format": "",
                        "description": "The amount of the invoice without VAT in cents",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "IpRangeCidr": {
                "type": "object",
                "required": [
                    "network",
                    "netmask",
                    "prefix",
                    "gateway",
                    "rDns"
                ],
                "properties": {
                    "network": {
                        "type": "string",
                        "format": "",
                        "description": "The ip of the network",
                        "readOnly": true
                    },
                    "netmask": {
                        "type": "string",
                        "format": "",
                        "description": "The range netmask",
                        "readOnly": true
                    },
                    "prefix": {
                        "type": "string",
                        "format": "",
                        "description": "CIDR prefix, including leading slash",
                        "readOnly": true
                    },
                    "gateway": {
                        "type": "string",
                        "format": "",
                        "description": "The gateway IP",
                        "readOnly": true
                    },
                    "vrrp1": {
                        "type": "string",
                        "format": "",
                        "description": "The virtual router redundancy protocol 1",
                        "nullable": true
                    },
                    "vrrp2": {
                        "type": "string",
                        "format": "",
                        "description": "The virtual router redundancy protocol 1",
                        "nullable": true
                    },
                    "rDns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RDns"
                        },
                        "description": "RDNS records",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "IpRangeCustom": {
                "type": "object",
                "required": [
                    "networkStart",
                    "networkEnd",
                    "gateway",
                    "rDns"
                ],
                "properties": {
                    "networkStart": {
                        "type": "string",
                        "format": "",
                        "description": "The start ip of the network",
                        "readOnly": true
                    },
                    "networkEnd": {
                        "type": "string",
                        "format": "",
                        "description": "The end ip of the network",
                        "readOnly": true
                    },
                    "gateway": {
                        "type": "string",
                        "format": "",
                        "description": "The gateway IP",
                        "readOnly": true
                    },
                    "vrrp1": {
                        "type": "string",
                        "format": "",
                        "description": "The virtual router redundancy protocol 1",
                        "nullable": true
                    },
                    "vrrp2": {
                        "type": "string",
                        "format": "",
                        "description": "The virtual router redundancy protocol 1",
                        "nullable": true
                    },
                    "rDns": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RDns"
                        },
                        "description": "RDNS records",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Job": {
                "type": "object",
                "required": [
                    "id",
                    "slug",
                    "title",
                    "headerImage",
                    "tileImage",
                    "introText",
                    "text",
                    "intakeDate"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the job"
                    },
                    "slug": {
                        "type": "string",
                        "format": "",
                        "description": "Title in url format"
                    },
                    "title": {
                        "type": "string",
                        "format": "",
                        "description": "Job title"
                    },
                    "headerImage": {
                        "type": "string",
                        "format": "",
                        "description": "Image to display as the header for the job details page"
                    },
                    "tileImage": {
                        "type": "string",
                        "format": "",
                        "description": "Image to use on the over view page for this job"
                    },
                    "introText": {
                        "type": "string",
                        "format": "",
                        "description": "Job introductory text"
                    },
                    "text": {
                        "type": "string",
                        "format": "",
                        "description": "Job description text"
                    },
                    "intakeDate": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Unix timestamp of the (final) intake date"
                    }
                },
                "additionalProperties": false
            },
            "Label": {
                "type": "object",
                "required": [
                    "key",
                    "value"
                ],
                "properties": {
                    "key": {
                        "type": "string",
                        "format": "",
                        "description": "Label key, only hyphens (-), underscores (_), lowercase characters and numbers are allowed. Keys must start with a lowercase character."
                    },
                    "value": {
                        "type": "string",
                        "format": "",
                        "description": "Label value, maximum length is 150 characters"
                    }
                },
                "additionalProperties": false
            },
            "MemoryTriggerRule": {
                "type": "object",
                "required": [
                    "operator",
                    "triggerWindow",
                    "threshold"
                ],
                "properties": {
                    "operator": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The operator used for this rule, you can find the list on this endpoint [GET /v3/trigger/type/operators](all#/Trigger/getTriggerTypeOperators)"
                    },
                    "triggerWindow": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The time window for a rule, time will be in seconds"
                    },
                    "threshold": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The amount of memory were the event should be triggered on in MB"
                    }
                },
                "additionalProperties": false
            },
            "Network": {
                "type": "object",
                "required": [
                    "vlanId",
                    "ipRange",
                    "ipRangeCustom"
                ],
                "properties": {
                    "vlanId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The vlan ID",
                        "readOnly": true
                    },
                    "ipRange": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IpRangeCidr"
                        },
                        "description": "Defines a list of IP ranges with a prefix in CIDR format (such as 123.123.123.64/26)",
                        "readOnly": true
                    },
                    "ipRangeCustom": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IpRangeCustom"
                        },
                        "description": "Defines a list of custom IP ranges that do not use prefixes but have an arbitrary start and end ip range (such as 123.123.123.100 - 123.123.123.200)",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "NewsletterConfirm": {
                "type": "object",
                "required": [
                    "token"
                ],
                "properties": {
                    "token": {
                        "type": "string",
                        "format": "uuid",
                        "description": "The confirmation token from the opt-in email."
                    }
                },
                "additionalProperties": false
            },
            "NewsletterOptIn": {
                "type": "object",
                "required": [
                    "email",
                    "language"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "maxLength": 128,
                        "format": "",
                        "description": "Customer's email address"
                    },
                    "language": {
                        "type": "string",
                        "format": "",
                        "description": "Customer's preferred language"
                    }
                },
                "additionalProperties": false
            },
            "NewsletterUnsubscribe": {
                "type": "object",
                "required": [
                    "mailhash",
                    "key"
                ],
                "properties": {
                    "mailhash": {
                        "type": "string",
                        "format": "",
                        "description": "A hash, as provided in the newsletter unsubscribe url"
                    },
                    "key": {
                        "type": "string",
                        "format": "",
                        "description": "A key, as provided in the newsletter unsubscribe url"
                    }
                },
                "additionalProperties": false
            },
            "OnlineStatus": {
                "type": "object",
                "required": [
                    "status",
                    "groups"
                ],
                "properties": {
                    "status": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The status of all the systems\n* 1: All systems operational\n* 2: Multiple systems have performance issues\n* 3: Multiple systems are offline\n* 4: All systems are offline",
                        "readOnly": true
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OnlineStatusGroup"
                        },
                        "description": "A list of groups with more detailed status",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "OnlineStatusComponent": {
                "type": "object",
                "required": [
                    "name",
                    "status"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the component",
                        "readOnly": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The status of the component\n* 1: All systems operational\n* 2: Multiple systems have performance issues\n* 3: Multiple systems are offline\n* 4: All systems are offline",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "OnlineStatusGroup": {
                "type": "object",
                "required": [
                    "name",
                    "status",
                    "components"
                ],
                "properties": {
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the group",
                        "readOnly": true
                    },
                    "status": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The status of the group\n* 1: All systems operational\n* 2: Multiple systems have performance issues\n* 3: Multiple systems are offline\n* 4: All systems are offline",
                        "readOnly": true
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/OnlineStatusComponent"
                        },
                        "description": "A list of components for this group",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "OperatingSystem": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "slug",
                    "osGroup",
                    "isOdp",
                    "availableForFlexMetal",
                    "active"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of this operating system",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of this operating system",
                        "readOnly": true
                    },
                    "slug": {
                        "type": "string",
                        "format": "",
                        "description": "Unique key for operating system",
                        "readOnly": true
                    },
                    "osGroup": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The operating system group.\n1) Windows\n2) Linux / BSD",
                        "readOnly": true
                    },
                    "isOdp": {
                        "type": "integer",
                        "format": "integer",
                        "description": "`1` if you can use this operating system with ODP, `0` otherwise.",
                        "readOnly": true
                    },
                    "availableForFlexMetal": {
                        "type": "integer",
                        "format": "integer",
                        "description": "`1` if you can use this operating system with Flex Metal, `0` otherwise.",
                        "readOnly": true
                    },
                    "active": {
                        "type": "integer",
                        "format": "integer",
                        "description": "`1` if this operating system is an active operating system, `0` otherwise.",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "PasswordChange": {
                "type": "object",
                "required": [
                    "currentPassword",
                    "newPassword"
                ],
                "properties": {
                    "currentPassword": {
                        "type": "string",
                        "format": "",
                        "description": "Current Password"
                    },
                    "newPassword": {
                        "type": "string",
                        "format": "",
                        "description": "New Password"
                    }
                },
                "additionalProperties": false
            },
            "PasswordReset": {
                "type": "object",
                "required": [
                    "emailAddress"
                ],
                "properties": {
                    "emailAddress": {
                        "type": "string",
                        "format": "",
                        "description": "Main Email Address"
                    }
                },
                "additionalProperties": false
            },
            "PasswordResetValidate": {
                "type": "object",
                "required": [
                    "newPassword",
                    "resetHash"
                ],
                "properties": {
                    "newPassword": {
                        "type": "string",
                        "format": "",
                        "description": "New Password"
                    },
                    "resetHash": {
                        "type": "string",
                        "format": "",
                        "description": "Reset Hash"
                    }
                },
                "additionalProperties": false
            },
            "PayPrepare": {
                "type": "object",
                "required": [
                    "totalAmount",
                    "currency",
                    "currencySign",
                    "totalSelectedInvoiceForPay",
                    "totalSelectedCreditForSettle",
                    "accountCredit"
                ],
                "properties": {
                    "totalAmount": {
                        "type": "string",
                        "format": "",
                        "description": "The total amount of the selected invoices",
                        "readOnly": true
                    },
                    "currency": {
                        "type": "string",
                        "format": "",
                        "description": "The currency that is being used"
                    },
                    "currencySign": {
                        "type": "string",
                        "format": "",
                        "description": "The currency sign that is being used"
                    },
                    "totalSelectedInvoiceForPay": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The total selected invoices for pay"
                    },
                    "totalSelectedCreditForSettle": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The total selected credit invoices for settle"
                    },
                    "accountCredit": {
                        "type": "string",
                        "format": "",
                        "description": "The amount of the account credit"
                    },
                    "invoicesForPay": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invoice"
                        },
                        "description": "The selected invoices for pay"
                    },
                    "creditInvoices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invoice"
                        },
                        "description": "The open credit invoices"
                    },
                    "paymentMethod": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentMethod"
                        },
                        "description": "The payment method"
                    }
                },
                "additionalProperties": false
            },
            "PayRegister": {
                "type": "object",
                "required": [
                    "invoiceIds",
                    "paymentMethodId",
                    "issuerId"
                ],
                "properties": {
                    "invoiceIds": {
                        "type": "string",
                        "format": ""
                    },
                    "paymentMethodId": {
                        "type": "integer",
                        "format": "integer"
                    },
                    "issuerId": {
                        "type": "string",
                        "format": ""
                    }
                },
                "additionalProperties": false
            },
            "PayRegisterResponse": {
                "type": "object",
                "required": [
                    "requestUrl",
                    "postFormInputs",
                    "accountCredit",
                    "totalAmount",
                    "paymentMethod",
                    "invoicesForPay"
                ],
                "properties": {
                    "requestUrl": {
                        "type": "string",
                        "format": "",
                        "description": "URL where to send the user with post form data"
                    },
                    "postFormInputs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": true
                        },
                        "description": "Any data that should be sent to payment provider"
                    },
                    "accountCredit": {
                        "type": "string",
                        "format": "",
                        "description": "The amount of the account credit"
                    },
                    "totalAmount": {
                        "type": "string",
                        "format": "",
                        "description": "Total amount to pay"
                    },
                    "paymentMethod": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PaymentMethod"
                            }
                        ],
                        "description": "Chosen payment method"
                    },
                    "invoicesForPay": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invoice"
                        },
                        "description": "Invoices to pay",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "PaymentLandingResponse": {
                "type": "object",
                "required": [
                    "message",
                    "status",
                    "paymentMethod",
                    "invoices"
                ],
                "properties": {
                    "message": {
                        "type": "string",
                        "format": "",
                        "description": "Payment processing result message",
                        "readOnly": true
                    },
                    "status": {
                        "type": "string",
                        "format": "",
                        "description": "Payment processing result status",
                        "readOnly": true
                    },
                    "paymentMethod": {
                        "type": "string",
                        "format": "",
                        "description": "The method of the payment",
                        "readOnly": true
                    },
                    "invoices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invoice"
                        },
                        "description": "Payment invoices",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "PaymentMethod": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "isSelectable",
                    "paymentProviderId"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the payment method"
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the payment method"
                    },
                    "isSelectable": {
                        "type": "integer",
                        "format": "integer",
                        "description": "if this field is 1 the end-user can use this payment method for the payment"
                    },
                    "paymentProviderId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The id of the payment provider"
                    },
                    "issuers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PaymentMethodIssuers"
                        },
                        "description": "the issuers of the payment method"
                    }
                },
                "additionalProperties": false
            },
            "PaymentMethodIssuers": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "",
                        "description": "The ID of payment method issuer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of payment method issuer"
                    }
                },
                "additionalProperties": false
            },
            "Pdu": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "serial",
                    "updatedAt",
                    "inputFeedType",
                    "outlets",
                    "phases",
                    "powerMeter",
                    "powerFactor",
                    "amperage",
                    "peakAmperage",
                    "voltage",
                    "minVoltage",
                    "conduits"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The id of feed",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The feed name"
                    },
                    "serial": {
                        "type": "string",
                        "format": "",
                        "description": "The serial number"
                    },
                    "updatedAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The last update time"
                    },
                    "inputFeedType": {
                        "type": "string",
                        "format": "",
                        "description": "The feed type"
                    },
                    "outlets": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The number of outlets on this pdu"
                    },
                    "phases": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The number of phases that this pdu supports"
                    },
                    "powerMeter": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The last registered counter value"
                    },
                    "powerFactor": {
                        "type": "number",
                        "format": "float",
                        "description": "The total power factor"
                    },
                    "amperage": {
                        "type": "number",
                        "format": "float",
                        "description": "The total amperage supported by pdu"
                    },
                    "peakAmperage": {
                        "type": "number",
                        "format": "float",
                        "description": "The peak amperage"
                    },
                    "voltage": {
                        "type": "number",
                        "format": "float",
                        "description": "The total actual voltage"
                    },
                    "minVoltage": {
                        "type": "number",
                        "format": "float",
                        "description": "The total min voltage"
                    },
                    "conduits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Conduit"
                        },
                        "description": "The details of the outlets",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "PingSite": {
                "type": "object",
                "required": [
                    "continentId",
                    "continentName",
                    "countryId",
                    "country",
                    "dcLocationId",
                    "dcLocationName",
                    "hostname",
                    "ipv4",
                    "ipv6"
                ],
                "properties": {
                    "continentId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the continent"
                    },
                    "continentName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the continent"
                    },
                    "countryId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the country"
                    },
                    "country": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the country"
                    },
                    "dcLocationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the data center. Find all possible values from `GET /cloud/dcLocation`"
                    },
                    "dcLocationName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the data center. Find all possible values from `GET /cloud/dcLocation`"
                    },
                    "hostname": {
                        "type": "string",
                        "format": "",
                        "description": "The host name of the ping server in this data center",
                        "readOnly": true
                    },
                    "ipv4": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": ""
                        },
                        "description": "List of ip address of ip version 4",
                        "readOnly": true,
                        "deprecated": true
                    },
                    "ipv6": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": ""
                        },
                        "description": "List of ip address of ip version 6",
                        "readOnly": true,
                        "deprecated": true
                    }
                },
                "additionalProperties": false
            },
            "PingSiteDetail": {
                "type": "object",
                "required": [
                    "continentId",
                    "continentName",
                    "countryId",
                    "countryName",
                    "dcLocationId",
                    "dcLocationName",
                    "regionName",
                    "beacons"
                ],
                "properties": {
                    "continentId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the continent",
                        "readOnly": true
                    },
                    "continentName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the continent",
                        "readOnly": true
                    },
                    "countryId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the country",
                        "readOnly": true
                    },
                    "countryName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the country",
                        "readOnly": true
                    },
                    "dcLocationId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the data center. Find all possible values from `GET /cloud/dcLocation`",
                        "readOnly": true
                    },
                    "dcLocationName": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the data center. Find all possible values from `GET /cloud/dcLocation`",
                        "readOnly": true
                    },
                    "regionName": {
                        "type": "string",
                        "format": "",
                        "description": "The region name of the ping server in this data center",
                        "readOnly": true
                    },
                    "beacons": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PingSiteDetailBeacon"
                        },
                        "description": "The list of available beacons"
                    }
                },
                "additionalProperties": false
            },
            "PingSiteDetailBeacon": {
                "type": "object",
                "required": [
                    "hostName",
                    "state",
                    "ip"
                ],
                "properties": {
                    "hostName": {
                        "type": "string",
                        "format": "",
                        "description": "The host name of the ping server in this data center",
                        "readOnly": true
                    },
                    "state": {
                        "type": "string",
                        "format": "",
                        "description": "The state of the beacon",
                        "readOnly": true
                    },
                    "ip": {
                        "type": "string",
                        "format": "",
                        "description": "The IP address of the beacon",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyConnectionModel": {
                "type": "object",
                "required": [
                    "type",
                    "properties",
                    "geometry"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": ""
                    },
                    "properties": {
                        "$ref": "#/components/schemas/PingSiteLatencyPropertyModel"
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/PingSiteLatencyFeaturesGeometryModel"
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyCoordinatesModel": {
                "type": "object",
                "required": [
                    "lat",
                    "lng"
                ],
                "properties": {
                    "lat": {
                        "type": "string",
                        "format": ""
                    },
                    "lng": {
                        "type": "string",
                        "format": ""
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyFeaturesGeometryModel": {
                "type": "object",
                "required": [
                    "type",
                    "coordinates"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": ""
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "type": "array",
                            "items": {
                                "type": "number",
                                "format": "float"
                            }
                        }
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyFeaturesModel": {
                "type": "object",
                "required": [
                    "ok",
                    "down",
                    "loss"
                ],
                "properties": {
                    "ok": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PingSiteLatencyConnectionModel"
                        }
                    },
                    "down": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PingSiteLatencyConnectionModel"
                        }
                    },
                    "loss": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PingSiteLatencyConnectionModel"
                        }
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyModel": {
                "type": "object",
                "required": [
                    "authStatus",
                    "authservice",
                    "authuser",
                    "responseTime",
                    "status",
                    "response",
                    "serverTime"
                ],
                "properties": {
                    "authStatus": {
                        "type": "boolean"
                    },
                    "authservice": {
                        "type": "boolean"
                    },
                    "authuser": {
                        "type": "boolean"
                    },
                    "responseTime": {
                        "type": "number",
                        "format": "float"
                    },
                    "status": {
                        "type": "string",
                        "format": ""
                    },
                    "response": {
                        "$ref": "#/components/schemas/PingSiteLatencyResponseModel"
                    },
                    "serverTime": {
                        "type": "string",
                        "format": ""
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyPropertyModel": {
                "type": "object",
                "required": [
                    "link",
                    "description"
                ],
                "properties": {
                    "link": {
                        "type": "string",
                        "format": ""
                    },
                    "description": {
                        "type": "string",
                        "format": ""
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyResponseModel": {
                "type": "object",
                "required": [
                    "rpmRaw",
                    "features",
                    "routerPoints"
                ],
                "properties": {
                    "rpmRaw": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PingSiteLatencyRpmRawModel"
                        }
                    },
                    "features": {
                        "$ref": "#/components/schemas/PingSiteLatencyFeaturesModel"
                    },
                    "routerPoints": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PingSiteLatencyRouterPointModel"
                        }
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyRouterPointGeometryModel": {
                "type": "object",
                "required": [
                    "type",
                    "coordinates"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": ""
                    },
                    "coordinates": {
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "float"
                        }
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyRouterPointModel": {
                "type": "object",
                "required": [
                    "type",
                    "properties",
                    "geometry"
                ],
                "properties": {
                    "type": {
                        "type": "string",
                        "format": ""
                    },
                    "properties": {
                        "$ref": "#/components/schemas/PingSiteLatencyPropertyModel"
                    },
                    "geometry": {
                        "$ref": "#/components/schemas/PingSiteLatencyRouterPointGeometryModel"
                    }
                },
                "additionalProperties": false
            },
            "PingSiteLatencyRpmRawModel": {
                "type": "object",
                "required": [
                    "link",
                    "latency5m",
                    "latency1d",
                    "latency1w",
                    "latency30d",
                    "jitter",
                    "packetloss5m",
                    "packetloss1d",
                    "packetloss1w",
                    "packetloss30d",
                    "sourceRegion",
                    "source",
                    "destinationRegion",
                    "destination"
                ],
                "properties": {
                    "link": {
                        "type": "string",
                        "format": ""
                    },
                    "latency5m": {
                        "type": "string",
                        "format": ""
                    },
                    "latency1d": {
                        "type": "string",
                        "format": ""
                    },
                    "latency1w": {
                        "type": "string",
                        "format": ""
                    },
                    "latency30d": {
                        "type": "string",
                        "format": ""
                    },
                    "jitter": {
                        "type": "string",
                        "format": ""
                    },
                    "packetloss5m": {
                        "type": "string",
                        "format": ""
                    },
                    "packetloss1d": {
                        "type": "string",
                        "format": ""
                    },
                    "packetloss1w": {
                        "type": "string",
                        "format": ""
                    },
                    "packetloss30d": {
                        "type": "string",
                        "format": ""
                    },
                    "sourceRegion": {
                        "type": "boolean"
                    },
                    "source": {
                        "$ref": "#/components/schemas/PingSiteLatencyCoordinatesModel"
                    },
                    "destinationRegion": {
                        "type": "boolean"
                    },
                    "destination": {
                        "$ref": "#/components/schemas/PingSiteLatencyCoordinatesModel"
                    }
                },
                "additionalProperties": false
            },
            "PowerConsumptionPerDay": {
                "type": "object",
                "required": [
                    "date",
                    "powerMeter",
                    "powerUsed"
                ],
                "properties": {
                    "date": {
                        "type": "string",
                        "format": "",
                        "description": "The corresponding date",
                        "readOnly": true
                    },
                    "powerMeter": {
                        "type": "string",
                        "format": "",
                        "description": "The power meter(kWh)",
                        "readOnly": true
                    },
                    "powerUsed": {
                        "type": "string",
                        "format": "",
                        "description": "The used power(kWh)",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "PropertiesModel": {
                "type": "object",
                "required": [
                    "value"
                ],
                "properties": {
                    "value": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The heat value for the coordinate"
                    }
                },
                "additionalProperties": false
            },
            "QuoteColocation": {
                "type": "object",
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "phone",
                    "rack",
                    "location",
                    "remarks"
                ],
                "properties": {
                    "firstName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 64,
                        "format": "",
                        "description": "Customer's first name"
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 128,
                        "format": "",
                        "description": "Customer's last name"
                    },
                    "companyName": {
                        "type": "string",
                        "maxLength": 120,
                        "format": "",
                        "description": "Customer's company name (optional)"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 128,
                        "format": "",
                        "description": "Customer's email address"
                    },
                    "phone": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 15,
                        "format": "",
                        "description": "Customer's phone number"
                    },
                    "rack": {
                        "type": "string",
                        "format": "",
                        "description": "Rack space volume of interest"
                    },
                    "location": {
                        "type": "string",
                        "format": "",
                        "description": "Location of interest"
                    },
                    "remarks": {
                        "type": "string",
                        "format": "",
                        "description": "Quote remarks (the actual question and additional details)"
                    }
                },
                "additionalProperties": false
            },
            "RDns": {
                "type": "object",
                "required": [
                    "hostname",
                    "ip"
                ],
                "properties": {
                    "hostname": {
                        "type": "string",
                        "format": "",
                        "description": "The hostname"
                    },
                    "ip": {
                        "type": "string",
                        "format": "",
                        "description": "The corresponding ip for the host",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Service": {
                "type": "object",
                "required": [
                    "id",
                    "service",
                    "amount"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the service",
                        "readOnly": true
                    },
                    "service": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the service",
                        "readOnly": true
                    },
                    "amount": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The amount of service the customer has",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "SessionAuthReq": {
                "type": "object",
                "required": [
                    "requiresOtp",
                    "expiresAt",
                    "otpSessionExpiresAt"
                ],
                "properties": {
                    "requiresOtp": {
                        "type": "boolean",
                        "description": "Indicates whether a 2FA One-Time Password token is required to complete the login."
                    },
                    "expiresAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Unix timestamp indicating when the window for 2FA authentication closes, 0 if not applicable."
                    },
                    "otpSessionExpiresAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "If 2FA is active on your account, you must supply the one-time-password before this unix timestamp expires."
                    }
                },
                "additionalProperties": false
            },
            "SessionLogin": {
                "type": "object",
                "required": [
                    "userName",
                    "password"
                ],
                "properties": {
                    "userName": {
                        "type": "string",
                        "format": "",
                        "description": "User name"
                    },
                    "password": {
                        "type": "string",
                        "format": "",
                        "description": "Password"
                    },
                    "rememberMe": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Remember me"
                    }
                },
                "additionalProperties": false
            },
            "SessionLoginOtp": {
                "type": "object",
                "required": [
                    "otp"
                ],
                "properties": {
                    "otp": {
                        "type": "string",
                        "format": "",
                        "description": "6 digit One-Time Password"
                    }
                },
                "additionalProperties": false
            },
            "SessionUser": {
                "type": "object",
                "required": [
                    "userId",
                    "userName",
                    "email",
                    "firstName",
                    "lastName",
                    "gender",
                    "phone",
                    "accessLevel",
                    "validateEmail",
                    "isTrialAccount",
                    "trialAccountExpirationDate",
                    "requestIp",
                    "requestIpCountry",
                    "requestIpCountryCode",
                    "details",
                    "billingDetails"
                ],
                "properties": {
                    "userId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Your user ID"
                    },
                    "userName": {
                        "type": "string",
                        "format": "",
                        "description": "Your user name"
                    },
                    "email": {
                        "type": "string",
                        "format": "",
                        "description": "Email"
                    },
                    "firstName": {
                        "type": "string",
                        "format": "",
                        "description": "First name"
                    },
                    "lastName": {
                        "type": "string",
                        "format": "",
                        "description": "Last name"
                    },
                    "gender": {
                        "type": "string",
                        "format": "",
                        "description": "User gender"
                    },
                    "phone": {
                        "type": "string",
                        "format": "",
                        "description": "Phone number"
                    },
                    "accessLevel": {
                        "type": "integer",
                        "format": "integer",
                        "description": "0: Guest, 10: Regular logged in user, 20: Game Hosting management access"
                    },
                    "validateEmail": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not user email is validated",
                        "readOnly": true
                    },
                    "isTrialAccount": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Whether or not user is trial account",
                        "readOnly": true
                    },
                    "trialAccountExpirationDate": {
                        "type": "string",
                        "format": "",
                        "description": "The expiration date of the trial account",
                        "readOnly": true
                    },
                    "requestIp": {
                        "type": "string",
                        "format": "",
                        "description": "Request IP address"
                    },
                    "requestIpCountry": {
                        "type": "string",
                        "format": "",
                        "description": "The GeoLocation country (ISO 3166) of the request IP address"
                    },
                    "requestIpCountryCode": {
                        "type": "string",
                        "format": "",
                        "description": "The GeoLocation country code (ISO 3166 Alpha-2) of the request IP address"
                    },
                    "details": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountDetails"
                            }
                        ],
                        "description": "User account details",
                        "readOnly": true
                    },
                    "billingDetails": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AccountBillingDetails"
                            }
                        ],
                        "description": "User account billing details",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "SlackSetting": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "webHookUrl",
                    "channel",
                    "userName"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "",
                        "description": "The ID of the slack setting",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The slack setting name"
                    },
                    "webHookUrl": {
                        "type": "string",
                        "format": "",
                        "description": "The slack setting web hook (https://hooks.slack.com/services/TXXXXXXXX/BXXXXXXXX/xxxxxxxxxxxxxxxxxxxxxxxx)"
                    },
                    "channel": {
                        "type": "string",
                        "format": "",
                        "description": "The slack setting channel name"
                    },
                    "userName": {
                        "type": "string",
                        "format": "",
                        "description": "The slack setting channel username"
                    }
                },
                "additionalProperties": false
            },
            "SshKey": {
                "type": "object",
                "required": [
                    "uuid",
                    "name",
                    "publicKey",
                    "createdAt"
                ],
                "properties": {
                    "uuid": {
                        "type": "string",
                        "format": "",
                        "example": "7561c39d-f4df-4c46-b3f1-2ac981271e29",
                        "description": "SSH key UUID as specified in RFC 4122",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "SSH key name"
                    },
                    "publicKey": {
                        "type": "string",
                        "format": "",
                        "description": "Public SSH key contents"
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "SSH key createdAt",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "SwitchPortAdminState": {
                "type": "object",
                "required": [
                    "serverId",
                    "networkInterfaceId",
                    "state"
                ],
                "properties": {
                    "serverId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Server ID"
                    },
                    "networkInterfaceId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Network Interface ID or graphUrl"
                    },
                    "state": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Port admin state"
                    }
                },
                "additionalProperties": false
            },
            "SwitchPortRateLimit": {
                "type": "object",
                "required": [
                    "serverId",
                    "networkInterfaceId",
                    "rateLimit"
                ],
                "properties": {
                    "serverId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Server ID"
                    },
                    "networkInterfaceId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Network Interface ID or graphUrl"
                    },
                    "rateLimit": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Port rate limit"
                    }
                },
                "additionalProperties": false
            },
            "SwitchPortSpeed": {
                "type": "object",
                "required": [
                    "serverId",
                    "networkInterfaceId",
                    "portSpeed"
                ],
                "properties": {
                    "serverId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Server ID"
                    },
                    "networkInterfaceId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Network Interface ID or graphUrl"
                    },
                    "portSpeed": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Port Speed"
                    }
                },
                "additionalProperties": false
            },
            "Ticket": {
                "type": "object",
                "required": [
                    "title",
                    "categoryName",
                    "status"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Ticket ID"
                    },
                    "hash": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket hash"
                    },
                    "readHash": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket read hash"
                    },
                    "title": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket title"
                    },
                    "categoryName": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket category name"
                    },
                    "priorityName": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket priority name"
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Ticket creation unix timestamp"
                    },
                    "updatedAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Ticket last update unix timestamp"
                    },
                    "clientLastRepliedAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Time at which the client last replied to the ticket"
                    },
                    "clientLastReadAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Time at which the client last read the ticket"
                    },
                    "status": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket status"
                    },
                    "numUserReplies": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Number of replies in ticket"
                    },
                    "replies": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketReply"
                        },
                        "description": "All replies in this ticket"
                    }
                },
                "additionalProperties": false
            },
            "TicketNew": {
                "type": "object",
                "required": [
                    "title",
                    "content",
                    "category",
                    "department",
                    "emailCc",
                    "emailTo"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket title"
                    },
                    "content": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket content"
                    },
                    "category": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket category name, must be one of [GET /v3/tickets/categories](all#/tickets/categories)"
                    },
                    "department": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket department name"
                    },
                    "emailCc": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket's 'Carbon Copy' email addresses in CSV format"
                    },
                    "emailTo": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket's destination email addresses in CSV format"
                    },
                    "attachmentIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "integer"
                        },
                        "description": "The IDs of attachments that have been uploaded through [POST /v3/tickets/attachment](all#/Tickets/createTicketsAttachment)"
                    }
                },
                "additionalProperties": false
            },
            "TicketNewAttachment": {
                "type": "object",
                "required": [
                    "attachment"
                ],
                "properties": {
                    "attachment": {
                        "type": "object",
                        "additionalProperties": false,
                        "description": "The attachment that is uploaded through your `multipart/form-data` request."
                    }
                },
                "additionalProperties": false
            },
            "TicketNewContact": {
                "type": "object",
                "required": [
                    "firstName",
                    "lastName",
                    "email",
                    "phone",
                    "title",
                    "category"
                ],
                "properties": {
                    "firstName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 64,
                        "format": "",
                        "description": "Contact first name"
                    },
                    "lastName": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 128,
                        "format": "",
                        "description": "Contact last name"
                    },
                    "companyName": {
                        "type": "string",
                        "maxLength": 120,
                        "format": "",
                        "description": "Customer's company name (optional)"
                    },
                    "email": {
                        "type": "string",
                        "maxLength": 128,
                        "format": "",
                        "description": "Contact email address"
                    },
                    "phone": {
                        "type": "string",
                        "minLength": 5,
                        "maxLength": 15,
                        "format": "",
                        "description": "Contact phone number"
                    },
                    "title": {
                        "type": "string",
                        "minLength": 2,
                        "maxLength": 250,
                        "format": "",
                        "description": "Ticket title"
                    },
                    "content": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket content"
                    },
                    "category": {
                        "type": "string",
                        "format": "",
                        "description": "Ticket category name, must be one of [GET /v3/tickets/categories](all#/tickets/categories)"
                    }
                },
                "additionalProperties": false
            },
            "TicketNewReply": {
                "type": "object",
                "required": [
                    "title",
                    "content"
                ],
                "properties": {
                    "title": {
                        "type": "string",
                        "format": "",
                        "description": "Reply title"
                    },
                    "content": {
                        "type": "string",
                        "format": "",
                        "description": "Reply content"
                    },
                    "attachmentIds": {
                        "type": "array",
                        "items": {
                            "type": "integer",
                            "format": "integer"
                        },
                        "description": "The IDs of attachments that have been uploaded through [POST /v3/tickets/attachment](all#/Tickets/createTicketsAttachment)"
                    }
                },
                "additionalProperties": false
            },
            "TicketReply": {
                "type": "object",
                "required": [
                    "id",
                    "title",
                    "fullUserName",
                    "content",
                    "createdAt",
                    "replyByI3d",
                    "attachments"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Ticket reply ID"
                    },
                    "title": {
                        "type": "string",
                        "format": "",
                        "description": "Reply title"
                    },
                    "fullUserName": {
                        "type": "string",
                        "format": "",
                        "description": "Poster full name"
                    },
                    "content": {
                        "type": "string",
                        "format": "",
                        "description": "Reply text"
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Reply creation unix timestamp"
                    },
                    "replyByI3d": {
                        "type": "integer",
                        "format": "integer",
                        "description": "When 1, there has been a response from the helpdesk person",
                        "readOnly": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TicketReplyAttachment"
                        },
                        "description": "Reply attachments"
                    }
                },
                "additionalProperties": false
            },
            "TicketReplyAttachment": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "mime",
                    "size",
                    "uploadedTime"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Attachment ID"
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "Attachment file name"
                    },
                    "mime": {
                        "type": "string",
                        "format": "",
                        "description": "Attachment mime type"
                    },
                    "size": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Size in bytes"
                    },
                    "uploadedTime": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Attachment creation unix timestamp"
                    }
                },
                "additionalProperties": false
            },
            "TicketUploadedAttachment": {
                "type": "object",
                "required": [
                    "attachmentId"
                ],
                "properties": {
                    "attachmentId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The ID of the attachment that was uploaded through your `multipart/form-data` request."
                    }
                },
                "additionalProperties": false
            },
            "TimeTriggerRule": {
                "type": "object",
                "required": [
                    "operator",
                    "threshold"
                ],
                "properties": {
                    "operator": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The operator used for this rule, you can find the list on this endpoint [GET\n/v3/trigger/type/operators](all#/Trigger/getTriggerTypeOperators)"
                    },
                    "threshold": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The absolute amount of time the event should be triggered on in seconds"
                    }
                },
                "additionalProperties": false
            },
            "TrafficUsage": {
                "type": "object",
                "required": [
                    "unit",
                    "data"
                ],
                "properties": {
                    "unit": {
                        "type": "string",
                        "format": "",
                        "description": "Unit of data frequency,  possible interval options are as follows\n- day",
                        "readOnly": true
                    },
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrafficUsageData"
                        },
                        "description": "Contains the data object for the usage",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "TrafficUsageData": {
                "type": "object",
                "required": [
                    "timestamp",
                    "ingress",
                    "egress",
                    "sum"
                ],
                "properties": {
                    "timestamp": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The corresponding date",
                        "readOnly": true
                    },
                    "ingress": {
                        "type": "string",
                        "format": "",
                        "description": "The incoming data usage in bytes",
                        "readOnly": true
                    },
                    "egress": {
                        "type": "string",
                        "format": "",
                        "description": "The outgoing data usage in bytes",
                        "readOnly": true
                    },
                    "sum": {
                        "type": "string",
                        "format": "",
                        "description": "The total used data in bytes",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Trigger": {
                "type": "object",
                "required": [
                    "id",
                    "name",
                    "conditions",
                    "rules",
                    "actions",
                    "createdAt",
                    "changedAt",
                    "active"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "format": "",
                        "description": "ID of the the trigger",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the trigger"
                    },
                    "description": {
                        "type": "string",
                        "format": "",
                        "description": "The description of the trigger"
                    },
                    "conditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TriggerCondition"
                        },
                        "description": "The condition were the rule will be over"
                    },
                    "rules": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TriggerRule"
                        },
                        "description": "The rules that will fire the event"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TriggerAction"
                        },
                        "description": "The action that will be fired based on the condition and the rule"
                    },
                    "createdAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The unix timestamp when the trigger has been created.",
                        "readOnly": true
                    },
                    "changedAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The unix timestamp when the trigger has been changed.",
                        "readOnly": true
                    },
                    "active": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Status of the trigger\n* 1 the trigger is enabled\n* 0 the trigger is disabled",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "TriggerAction": {
                "type": "object",
                "required": [
                    "action"
                ],
                "properties": {
                    "action": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The action used for this trigger, you can find the list on this endpoint [GET /v3/trigger/type/actions](all#/Trigger/getTriggerTypeActions)"
                    },
                    "actionParameters": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ApplicationInstanceStopMethod"
                            }
                        ],
                        "description": "The action parameters that are used to fire the trigger"
                    }
                },
                "additionalProperties": false
            },
            "TriggerCondition": {
                "type": "object",
                "required": [
                    "conditionId",
                    "conditionValues"
                ],
                "properties": {
                    "conditionId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the rule to be used, you can find the list on this endpoint [GET /v3/trigger/type/conditions](all#/Trigger/getTriggerTypeConditions)"
                    },
                    "conditionValues": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": ""
                        },
                        "description": "ID of the object that belongs to the condition id chosen, use 0 for using all"
                    }
                },
                "additionalProperties": false
            },
            "TriggerRule": {
                "type": "object",
                "required": [
                    "ruleAction",
                    "ruleDataType",
                    "rule"
                ],
                "properties": {
                    "ruleAction": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The rule action you what to use, you can find the of on this endpoint [GET /v3/trigger/type/ruleActions](all#/Trigger/getTriggerTypeRuleActions)"
                    },
                    "ruleDataType": {
                        "type": "integer",
                        "format": "integer",
                        "description": "The rule data type, on which type of data the rule should apply, you can find the of on this endpoint [GET /v3/trigger/type/ruleDataTypes](all#/Trigger/getTriggerTypeRuleDataTypes)"
                    },
                    "rule": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MemoryTriggerRule"
                            },
                            {
                                "$ref": "#/components/schemas/CPUTriggerRule"
                            },
                            {
                                "$ref": "#/components/schemas/TimeTriggerRule"
                            }
                        ],
                        "description": "The rule that you want to trigger the event on"
                    }
                },
                "additionalProperties": false
            },
            "TriggerSummary": {
                "type": "object",
                "required": [
                    "id",
                    "name"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the type",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "format": "",
                        "description": "The name of the trigger"
                    },
                    "description": {
                        "type": "string",
                        "format": "",
                        "description": "The description of the trigger"
                    }
                },
                "additionalProperties": false
            },
            "TriggerType": {
                "type": "object",
                "required": [
                    "id",
                    "description"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "integer",
                        "description": "ID of the type",
                        "readOnly": true
                    },
                    "description": {
                        "type": "string",
                        "format": "",
                        "description": "The description of the type",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "UnconfirmedEmail": {
                "type": "object",
                "required": [
                    "email",
                    "expiresAt"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "",
                        "description": "Email address which is not confirmed yet"
                    },
                    "expiresAt": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Expiry time of confirmation link",
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "nullable": true
            },
            "UpLink": {
                "type": "object",
                "required": [
                    "side",
                    "uplinkId"
                ],
                "properties": {
                    "side": {
                        "type": "string",
                        "format": "",
                        "description": "Side of the uplink\nFollowing will be possible values for sides uplink:\n* A\n* Z",
                        "readOnly": true
                    },
                    "uplinkId": {
                        "type": "integer",
                        "format": "integer",
                        "description": "Up Link ID",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "WifiCredential": {
                "type": "object",
                "required": [
                    "networkName",
                    "userName",
                    "password"
                ],
                "properties": {
                    "networkName": {
                        "type": "string",
                        "format": "",
                        "description": "Wifi SSID",
                        "readOnly": true
                    },
                    "userName": {
                        "type": "string",
                        "format": "",
                        "description": "Wifi user-name",
                        "readOnly": true
                    },
                    "password": {
                        "type": "string",
                        "format": "",
                        "description": "Wifi Password",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            }
        },
        "securitySchemes": {
            "ApiKey": {
                "type": "apiKey",
                "name": "PRIVATE-TOKEN",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "ApiKey": []
        }
    ],
    "tags": [
        {
            "name": "APIKeyIPWhitelist",
            "description": "API key IP whitelist management"
        },
        {
            "name": "APILog",
            "description": "All api log endpoints"
        },
        {
            "name": "AccountAPIKey",
            "description": "Account API key management"
        },
        {
            "name": "AccountActionLog",
            "description": "Action log management"
        },
        {
            "name": "AccountBilling",
            "description": "Account billing information"
        },
        {
            "name": "AccountDetails",
            "description": "Account details"
        },
        {
            "name": "AccountDocument",
            "description": "Account documents management"
        },
        {
            "name": "AccountFiles",
            "description": "Files management"
        },
        {
            "name": "AccountIPWhitelist",
            "description": "IP whitelist management"
        },
        {
            "name": "AccountSignUp",
            "description": "Account sign-up"
        },
        {
            "name": "Billing",
            "description": "All invoices endpoints"
        },
        {
            "name": "CalcConfigurations",
            "description": "Order system configurations and items"
        },
        {
            "name": "CalcOrders",
            "description": "Order system order management"
        },
        {
            "name": "CalcUtilities",
            "description": "Order system utilities"
        },
        {
            "name": "CallbackSetting",
            "description": "All callback endpoints"
        },
        {
            "name": "Colocation",
            "description": "Colocation service endpoints"
        },
        {
            "name": "ColocationTelemetry",
            "description": "ColocationTelemetry service endpoints"
        },
        {
            "name": "Country",
            "description": "All country endpoints"
        },
        {
            "name": "CrossConnect",
            "description": "Cross connect service endpoints"
        },
        {
            "name": "CrossConnectTelemetry",
            "description": "Cross connect telemetry service endpoints"
        },
        {
            "name": "Currency",
            "description": "Currency endpoints"
        },
        {
            "name": "Dashboard",
            "description": "All dashboard endpoints"
        },
        {
            "name": "DedicatedServer",
            "description": "Dedicated server (bare metal or VM) requests"
        },
        {
            "name": "EmailConfirmation",
            "description": "Email confirmation"
        },
        {
            "name": "FlexMetalServer",
            "description": "FlexMetal servers are physical servers that can be requested and released at will.",
            "externalDocs": {
                "url": "https://www.i3d.net/docs/one/Compute/FlexMetal/api/"
            }
        },
        {
            "name": "FlexMetalTags",
            "description": "FlexMetal tags can be assigned to FlexMetal servers to administratively group them together and use them for filtering."
        },
        {
            "name": "Health",
            "description": "Health of the api"
        },
        {
            "name": "InternalService",
            "description": "All internal service endpoints"
        },
        {
            "name": "Job",
            "description": "Currently available jobs"
        },
        {
            "name": "Newsletter",
            "description": "Newsletter adjustments"
        },
        {
            "name": "OperatingSystem",
            "description": "Operating system requests"
        },
        {
            "name": "Password",
            "description": "Account password management"
        },
        {
            "name": "Pay",
            "description": "All pay endpoints"
        },
        {
            "name": "PduTelemetry",
            "description": "PduTelemetry service endpoints"
        },
        {
            "name": "PingSite",
            "description": "List all ping sites"
        },
        {
            "name": "PxeServer",
            "description": "Pxe Switch"
        },
        {
            "name": "Quotes",
            "description": "Request quotes"
        },
        {
            "name": "SSHKey",
            "description": "SSH key management"
        },
        {
            "name": "Session",
            "description": "Session management"
        },
        {
            "name": "SlackSetting",
            "description": "List all the Slack settings endpoints"
        },
        {
            "name": "Tickets",
            "description": "Get and submit tickets."
        },
        {
            "name": "Trigger",
            "description": "List all trigger endpoint",
            "externalDocs": {
                "url": "https://www.i3d.net/docs/one/odp/Platform-Processes/trigger/",
                "description": "Documentation"
            }
        }
    ]
}